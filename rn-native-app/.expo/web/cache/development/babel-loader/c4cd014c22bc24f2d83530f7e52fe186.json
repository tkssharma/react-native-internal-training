{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-navigation-tabs/src/utils/withDimensions.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nexport var isOrientationLandscape = (_ref) => {\n  var {\n    width,\n    height\n  } = _ref;\n  return width > height;\n};\nexport default function withDimensions(WrappedComponent) {\n  var {\n    width,\n    height\n  } = Dimensions.get('window');\n\n  class EnhancedComponent extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        dimensions: {\n          width,\n          height\n        },\n        isLandscape: isOrientationLandscape({\n          width,\n          height\n        })\n      };\n\n      this.handleOrientationChange = (_ref2) => {\n        var {\n          window\n        } = _ref2;\n        var isLandscape = isOrientationLandscape(window);\n        this.setState({\n          isLandscape\n        });\n      };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, _extends({}, this.props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }));\n    }\n\n  }\n\n  EnhancedComponent.displayName = \"withDimensions(\".concat(WrappedComponent.displayName, \")\");\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-navigation-tabs/src/utils/withDimensions.js"],"names":["React","hoistNonReactStatic","isOrientationLandscape","width","height","withDimensions","WrappedComponent","Dimensions","get","EnhancedComponent","Component","state","dimensions","isLandscape","handleOrientationChange","window","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","props","displayName"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,mBAAP,MAAgC,yBAAhC;AAEA,OAAO,IAAMC,sBAAsB,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,SAAuBD,KAAK,GAAGC,MAA/B;AAAA,CAA/B;AAEP,eAAe,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACvD,MAAM;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBG,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;;AAEA,QAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAAgD;AAAA;AAAA;AAAA,WAG9CC,KAH8C,GAGtC;AACNC,QAAAA,UAAU,EAAE;AAAET,UAAAA,KAAF;AAASC,UAAAA;AAAT,SADN;AAENS,QAAAA,WAAW,EAAEX,sBAAsB,CAAC;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAD;AAF7B,OAHsC;;AAAA,WAgB9CU,uBAhB8C,GAgBpB,WAAgB;AAAA,YAAf;AAAEC,UAAAA;AAAF,SAAe;AACxC,YAAMF,WAAW,GAAGX,sBAAsB,CAACa,MAAD,CAA1C;AACA,aAAKC,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACD,OAnB6C;AAAA;;AAQ9CI,IAAAA,iBAAiB,GAAG;AAClBV,MAAAA,UAAU,CAACW,gBAAX,CAA4B,QAA5B,EAAsC,KAAKJ,uBAA3C;AACD;;AAEDK,IAAAA,oBAAoB,GAAG;AACrBZ,MAAAA,UAAU,CAACa,mBAAX,CAA+B,QAA/B,EAAyC,KAAKN,uBAA9C;AACD;;AAODO,IAAAA,MAAM,GAAG;AACP,aAAO,oBAAC,gBAAD,eAAsB,KAAKC,KAA3B,EAAsC,KAAKX,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAvB6C;;AAA1CF,EAAAA,iBAHiD,CAI9Cc,WAJ8C,4BAIdjB,gBAAgB,CAACiB,WAJH;AA6BvD,SAAOtB,mBAAmB,CAACQ,iBAAD,EAAoBH,gBAApB,CAA1B;AACD","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function withDimensions(WrappedComponent) {\n  const { width, height } = Dimensions.get('window');\n\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    state = {\n      dimensions: { width, height },\n      isLandscape: isOrientationLandscape({ width, height }),\n    };\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}