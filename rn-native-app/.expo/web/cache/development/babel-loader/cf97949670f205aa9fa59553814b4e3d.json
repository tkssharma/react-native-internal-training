{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/TabBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableItem from \"./TouchableItem\";\nimport { SceneRendererPropType } from \"./PropTypes\";\nvar useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\nexport default class TabBar extends React.Component {\n  constructor(_props) {\n    var _this;\n\n    super(_props);\n    _this = this;\n    this._isIntial = true;\n    this._isManualScroll = false;\n    this._isMomentumScroll = false;\n\n    this._startTrackingPosition = () => {\n      this._offsetXListener = this.props.offsetX.addListener((_ref) => {\n        var {\n          value\n        } = _ref;\n        this._lastOffsetX = value;\n\n        this._handlePosition();\n      });\n      this._panXListener = this.props.panX.addListener((_ref2) => {\n        var {\n          value\n        } = _ref2;\n        this._lastPanX = value;\n\n        this._handlePosition();\n      });\n    };\n\n    this._stopTrackingPosition = () => {\n      this.props.offsetX.removeListener(this._offsetXListener);\n      this.props.panX.removeListener(this._panXListener);\n    };\n\n    this._handlePosition = () => {\n      var {\n        navigationState,\n        layout\n      } = this.props;\n\n      if (layout.width === 0) {\n        return;\n      }\n\n      var panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n      var offsetX = typeof this._lastOffsetX === 'number' ? this._lastOffsetX : -navigationState.index * layout.width;\n      var value = (panX + offsetX) / -(layout.width || 0.001);\n\n      this._adjustScroll(value);\n    };\n\n    this._renderLabel = scene => {\n      if (typeof this.props.renderLabel !== 'undefined') {\n        return this.props.renderLabel(scene);\n      }\n\n      var label = this.props.getLabelText(scene);\n\n      if (typeof label !== 'string') {\n        return null;\n      }\n\n      return React.createElement(Animated.Text, {\n        style: [styles.tabLabel, this.props.labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, label);\n    };\n\n    this._renderIndicator = props => {\n      if (typeof this.props.renderIndicator !== 'undefined') {\n        return this.props.renderIndicator(props);\n      }\n\n      var {\n        width,\n        position,\n        navigationState\n      } = props;\n      var translateX = Animated.multiply(Animated.multiply(position.interpolate({\n        inputRange: [-1, navigationState.routes.length],\n        outputRange: [-1, navigationState.routes.length],\n        extrapolate: 'clamp'\n      }), width), I18nManager.isRTL ? -1 : 1);\n      return React.createElement(Animated.View, {\n        style: [styles.indicator, {\n          width,\n          transform: [{\n            translateX\n          }]\n        }, this.props.indicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      });\n    };\n\n    this._getTabWidth = props => {\n      var {\n        layout,\n        navigationState,\n        tabStyle\n      } = props;\n      var flattened = StyleSheet.flatten(tabStyle);\n\n      if (flattened) {\n        switch (typeof flattened.width) {\n          case 'number':\n            return flattened.width;\n\n          case 'string':\n            if (flattened.width.endsWith('%')) {\n              var width = parseFloat(flattened.width);\n\n              if (Number.isFinite(width)) {\n                return layout.width * (width / 100);\n              }\n            }\n\n        }\n      }\n\n      if (props.scrollEnabled) {\n        return layout.width / 5 * 2;\n      }\n\n      return layout.width / navigationState.routes.length;\n    };\n\n    this._handleTabPress = (_ref3) => {\n      var {\n        route\n      } = _ref3;\n      this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n\n      if (this.props.onTabPress) {\n        this.props.onTabPress({\n          route\n        });\n      }\n\n      this.props.jumpTo(route.key);\n    };\n\n    this._handleTabLongPress = (_ref4) => {\n      var {\n        route\n      } = _ref4;\n\n      if (this.props.onTabLongPress) {\n        this.props.onTabLongPress({\n          route\n        });\n      }\n    };\n\n    this._normalizeScrollValue = (props, value) => {\n      var {\n        layout,\n        navigationState\n      } = props;\n\n      var tabWidth = this._getTabWidth(props);\n\n      var tabBarWidth = Math.max(tabWidth * navigationState.routes.length, layout.width);\n      var maxDistance = tabBarWidth - layout.width;\n      return Math.max(Math.min(value, maxDistance), 0);\n    };\n\n    this._getScrollAmount = (props, i) => {\n      var {\n        layout\n      } = props;\n\n      var tabWidth = this._getTabWidth(props);\n\n      var centerDistance = tabWidth * (i + 1 / 2);\n      var scrollAmount = centerDistance - layout.width / 2;\n      return this._normalizeScrollValue(props, scrollAmount);\n    };\n\n    this._adjustScroll = value => {\n      if (this.props.scrollEnabled) {\n        global.cancelAnimationFrame(this._scrollResetCallback);\n        this._scrollView && this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(this.props, this._getScrollAmount(this.props, value)),\n          animated: !this._isIntial\n        });\n        this._isIntial = false;\n      }\n    };\n\n    this._resetScroll = function (value) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollResetCallback = global.requestAnimationFrame(() => {\n          _this._scrollView && _this._scrollView.scrollTo({\n            x: _this._getScrollAmount(_this.props, value),\n            animated\n          });\n        });\n      }\n    };\n\n    this._handleBeginDrag = () => {\n      this._isManualScroll = true;\n      this._isMomentumScroll = false;\n    };\n\n    this._handleEndDrag = () => {\n      global.requestAnimationFrame(() => {\n        if (this._isMomentumScroll) {\n          return;\n        }\n\n        this._isManualScroll = false;\n      });\n    };\n\n    this._handleMomentumScrollBegin = () => {\n      this._isMomentumScroll = true;\n    };\n\n    this._handleMomentumScrollEnd = () => {\n      this._isMomentumScroll = false;\n      this._isManualScroll = false;\n    };\n\n    var initialVisibility = 1;\n\n    if (this.props.scrollEnabled) {\n      var tabWidth = this._getTabWidth(this.props);\n\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    var initialOffset = this.props.scrollEnabled && this.props.layout.width ? {\n      x: this._getScrollAmount(this.props, this.props.navigationState.index),\n      y: 0\n    } : undefined;\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset\n    };\n  }\n\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n\n  componentDidUpdate(prevProps) {\n    var prevTabWidth = this._getTabWidth(prevProps);\n\n    var currentTabWidth = this._getTabWidth(this.props);\n\n    var pendingIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this.props.navigationState.index;\n    this._pendingIndex = null;\n\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n\n    if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n\n  render() {\n    var {\n      position,\n      navigationState,\n      scrollEnabled,\n      bounces\n    } = this.props;\n    var {\n      routes\n    } = navigationState;\n\n    var tabWidth = this._getTabWidth(this.props);\n\n    var tabBarWidth = tabWidth * routes.length;\n    var inputRange = [-1, ...routes.map((x, i) => i)];\n    var translateX = Animated.multiply(this.state.scrollAmount, -1);\n    return React.createElement(Animated.View, {\n      style: [styles.tabBar, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      }\n    }, React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.indicatorContainer, scrollEnabled ? {\n        width: tabBarWidth,\n        transform: [{\n          translateX\n        }]\n      } : null],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      }\n    }, this._renderIndicator(_objectSpread({}, this.props, {\n      width: tabWidth\n    }))), React.createElement(View, {\n      style: styles.scroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      }\n    }, React.createElement(Animated.ScrollView, {\n      horizontal: true,\n      keyboardShouldPersistTaps: \"handled\",\n      scrollEnabled: scrollEnabled,\n      bounces: bounces,\n      alwaysBounceHorizontal: false,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      automaticallyAdjustContentInsets: false,\n      overScrollMode: \"never\",\n      contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],\n      scrollEventThrottle: 1,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: this.state.scrollAmount\n          }\n        }\n      }], {\n        useNativeDriver\n      }),\n      onScrollBeginDrag: this._handleBeginDrag,\n      onScrollEndDrag: this._handleEndDrag,\n      onMomentumScrollBegin: this._handleMomentumScrollBegin,\n      onMomentumScrollEnd: this._handleMomentumScrollEnd,\n      contentOffset: this.state.initialOffset,\n      ref: el => this._scrollView = el && el.getNode(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      }\n    }, routes.map((route, i) => {\n      var outputRange = inputRange.map(inputIndex => inputIndex === i ? 1 : 0.7);\n      var opacity = Animated.multiply(this.state.visibility, position.interpolate({\n        inputRange,\n        outputRange\n      }));\n\n      var label = this._renderLabel({\n        route\n      });\n\n      var icon = this.props.renderIcon ? this.props.renderIcon({\n        route\n      }) : null;\n      var badge = this.props.renderBadge ? this.props.renderBadge({\n        route\n      }) : null;\n      var tabStyle = {};\n      tabStyle.opacity = opacity;\n\n      if (icon) {\n        if (label) {\n          tabStyle.paddingTop = 8;\n        } else {\n          tabStyle.padding = 12;\n        }\n      }\n\n      var passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n      var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;\n      var tabContainerStyle = {};\n\n      if (isWidthSet) {\n        tabStyle.width = tabWidth;\n      }\n\n      if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n        tabContainerStyle.flex = passedTabStyle.flex;\n      } else if (!isWidthSet) {\n        tabContainerStyle.flex = 1;\n      }\n\n      var accessibilityLabel = this.props.getAccessibilityLabel({\n        route\n      });\n      accessibilityLabel = typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : this.props.getLabelText({\n        route\n      });\n      var isFocused = i === navigationState.index;\n      return React.createElement(TouchableItem, {\n        borderless: true,\n        key: route.key,\n        testID: this.props.getTestID({\n          route\n        }),\n        accessible: this.props.getAccessible({\n          route\n        }),\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: isFocused ? ['button', 'selected'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: isFocused ? ['selected'] : [],\n        pressColor: this.props.pressColor,\n        pressOpacity: this.props.pressOpacity,\n        delayPressIn: 0,\n        onPress: () => this._handleTabPress({\n          route\n        }),\n        onLongPress: () => this._handleTabLongPress({\n          route\n        }),\n        style: tabContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        }\n      }, React.createElement(View, {\n        pointerEvents: \"none\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        }\n      }, icon, label), badge ? React.createElement(Animated.View, {\n        style: [styles.badge, {\n          opacity: this.state.visibility\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        }\n      }, badge) : null));\n    }))));\n  }\n\n}\nTabBar.propTypes = _objectSpread({}, SceneRendererPropType, {\n  scrollEnabled: PropTypes.bool,\n  bounces: PropTypes.bool,\n  pressColor: TouchableItem.propTypes.pressColor,\n  pressOpacity: TouchableItem.propTypes.pressOpacity,\n  getLabelText: PropTypes.func,\n  getAccessible: PropTypes.func,\n  getAccessibilityLabel: PropTypes.func,\n  getTestID: PropTypes.func,\n  renderIcon: PropTypes.func,\n  renderLabel: PropTypes.func,\n  renderIndicator: PropTypes.func,\n  onTabPress: PropTypes.func,\n  onTabLongPress: PropTypes.func,\n  labelStyle: PropTypes.any,\n  style: PropTypes.any\n});\nTabBar.defaultProps = {\n  getLabelText: (_ref5) => {\n    var {\n      route\n    } = _ref5;\n    return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;\n  },\n  getAccessible: (_ref6) => {\n    var {\n      route\n    } = _ref6;\n    return typeof route.accessible !== 'undefined' ? route.accessible : true;\n  },\n  getAccessibilityLabel: (_ref7) => {\n    var {\n      route\n    } = _ref7;\n    return route.accessibilityLabel;\n  },\n  getTestID: (_ref8) => {\n    var {\n      route\n    } = _ref8;\n    return route.testID;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll'\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth\n    },\n    zIndex: Platform.OS === 'android' ? 0 : 1\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2\n  }\n});","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/TabBar.js"],"names":["React","PropTypes","TouchableItem","SceneRendererPropType","useNativeDriver","Boolean","NativeModules","NativeAnimatedModule","TabBar","Component","constructor","props","_isIntial","_isManualScroll","_isMomentumScroll","_startTrackingPosition","_offsetXListener","offsetX","addListener","value","_lastOffsetX","_handlePosition","_panXListener","panX","_lastPanX","_stopTrackingPosition","removeListener","navigationState","layout","width","index","_adjustScroll","_renderLabel","scene","renderLabel","label","getLabelText","styles","tabLabel","labelStyle","_renderIndicator","renderIndicator","position","translateX","Animated","multiply","interpolate","inputRange","routes","length","outputRange","extrapolate","I18nManager","isRTL","indicator","transform","indicatorStyle","_getTabWidth","tabStyle","flattened","StyleSheet","flatten","endsWith","parseFloat","Number","isFinite","scrollEnabled","_handleTabPress","route","_pendingIndex","indexOf","onTabPress","jumpTo","key","_handleTabLongPress","onTabLongPress","_normalizeScrollValue","tabWidth","tabBarWidth","Math","max","maxDistance","min","_getScrollAmount","i","centerDistance","scrollAmount","global","cancelAnimationFrame","_scrollResetCallback","_scrollView","scrollTo","x","animated","_resetScroll","requestAnimationFrame","_handleBeginDrag","_handleEndDrag","_handleMomentumScrollBegin","_handleMomentumScrollEnd","initialVisibility","initialOffset","y","undefined","state","visibility","Value","componentDidMount","componentDidUpdate","prevProps","prevTabWidth","currentTabWidth","pendingIndex","setValue","componentWillUnmount","render","bounces","map","tabBar","style","indicatorContainer","scroll","tabContent","container","event","nativeEvent","contentOffset","el","getNode","inputIndex","opacity","icon","renderIcon","badge","renderBadge","paddingTop","padding","passedTabStyle","isWidthSet","tabContainerStyle","flex","accessibilityLabel","getAccessibilityLabel","isFocused","getTestID","getAccessible","pressColor","pressOpacity","tabItem","propTypes","bool","func","any","defaultProps","title","toUpperCase","accessible","testID","create","overflow","Platform","OS","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","height","zIndex","flexDirection","flexWrap","color","margin","alignItems","justifyContent","top","right","left","bottom"],"mappings":";;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;AAUA,OAAOC,aAAP;AACA,SAASC,qBAAT;AAsCA,IAAMC,eAAe,GAAGC,OAAO,CAACC,aAAa,CAACC,oBAAf,CAA/B;AAEA,eAAe,MAAMC,MAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA4D;AA6BzEC,EAAAA,WAAW,CAACC,MAAD,EAAkB;AAAA;;AAC3B,UAAMA,MAAN,CAD2B;AAAA;AAAA,SAgE7BC,SAhE6B,GAgER,IAhEQ;AAAA,SAiE7BC,eAjE6B,GAiEF,KAjEE;AAAA,SAkE7BC,iBAlE6B,GAkEA,KAlEA;;AAAA,SA0E7BC,sBA1E6B,GA0EJ,MAAM;AAC7B,WAAKC,gBAAL,GAAwB,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,WAAnB,CAA+B,UAAe;AAAA,YAAd;AAAEC,UAAAA;AAAF,SAAc;AACpE,aAAKC,YAAL,GAAoBD,KAApB;;AACA,aAAKE,eAAL;AACD,OAHuB,CAAxB;AAIA,WAAKC,aAAL,GAAqB,KAAKX,KAAL,CAAWY,IAAX,CAAgBL,WAAhB,CAA4B,WAAe;AAAA,YAAd;AAAEC,UAAAA;AAAF,SAAc;AAC9D,aAAKK,SAAL,GAAiBL,KAAjB;;AACA,aAAKE,eAAL;AACD,OAHoB,CAArB;AAID,KAnF4B;;AAAA,SAqF7BI,qBArF6B,GAqFL,MAAM;AAC5B,WAAKd,KAAL,CAAWM,OAAX,CAAmBS,cAAnB,CAAkC,KAAKV,gBAAvC;AACA,WAAKL,KAAL,CAAWY,IAAX,CAAgBG,cAAhB,CAA+B,KAAKJ,aAApC;AACD,KAxF4B;;AAAA,SA0F7BD,eA1F6B,GA0FX,MAAM;AACtB,UAAM;AAAEM,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,UAA8B,KAAKjB,KAAzC;;AAEA,UAAIiB,MAAM,CAACC,KAAP,KAAiB,CAArB,EAAwB;AAEtB;AACD;;AAED,UAAMN,IAAI,GAAG,OAAO,KAAKC,SAAZ,KAA0B,QAA1B,GAAqC,KAAKA,SAA1C,GAAsD,CAAnE;AACA,UAAMP,OAAO,GACX,OAAO,KAAKG,YAAZ,KAA6B,QAA7B,GACI,KAAKA,YADT,GAEI,CAACO,eAAe,CAACG,KAAjB,GAAyBF,MAAM,CAACC,KAHtC;AAKA,UAAMV,KAAK,GAAG,CAACI,IAAI,GAAGN,OAAR,IAAmB,EAAEW,MAAM,CAACC,KAAP,IAAgB,KAAlB,CAAjC;;AAEA,WAAKE,aAAL,CAAmBZ,KAAnB;AACD,KA3G4B;;AAAA,SA6G7Ba,YA7G6B,GA6GbC,KAAD,IAAqB;AAClC,UAAI,OAAO,KAAKtB,KAAL,CAAWuB,WAAlB,KAAkC,WAAtC,EAAmD;AACjD,eAAO,KAAKvB,KAAL,CAAWuB,WAAX,CAAuBD,KAAvB,CAAP;AACD;;AACD,UAAME,KAAK,GAAG,KAAKxB,KAAL,CAAWyB,YAAX,CAAwBH,KAAxB,CAAd;;AACA,UAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAO,IAAP;AACD;;AACD,aACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACE,MAAM,CAACC,QAAR,EAAkB,KAAK3B,KAAL,CAAW4B,UAA7B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KADH,CADF;AAKD,KA1H4B;;AAAA,SA4H7BK,gBA5H6B,GA4HT7B,KAAD,IAA8B;AAC/C,UAAI,OAAO,KAAKA,KAAL,CAAW8B,eAAlB,KAAsC,WAA1C,EAAuD;AACrD,eAAO,KAAK9B,KAAL,CAAW8B,eAAX,CAA2B9B,KAA3B,CAAP;AACD;;AACD,UAAM;AAAEkB,QAAAA,KAAF;AAASa,QAAAA,QAAT;AAAmBf,QAAAA;AAAnB,UAAuChB,KAA7C;AACA,UAAMgC,UAAU,GAAGC,QAAQ,CAACC,QAAT,CACjBD,QAAQ,CAACC,QAAT,CACEH,QAAQ,CAACI,WAAT,CAAqB;AACnBC,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAKpB,eAAe,CAACqB,MAAhB,CAAuBC,MAA5B,CADO;AAEnBC,QAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAKvB,eAAe,CAACqB,MAAhB,CAAuBC,MAA5B,CAFM;AAGnBE,QAAAA,WAAW,EAAE;AAHM,OAArB,CADF,EAMEtB,KANF,CADiB,EASjBuB,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CATR,CAAnB;AAWA,aACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE,CACLhB,MAAM,CAACiB,SADF,EAEL;AAAEzB,UAAAA,KAAF;AAAS0B,UAAAA,SAAS,EAAE,CAAC;AAAEZ,YAAAA;AAAF,WAAD;AAApB,SAFK,EAGL,KAAKhC,KAAL,CAAW6C,cAHN,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KArJ4B;;AAAA,SAuJ7BC,YAvJ6B,GAuJd9C,KAAK,IAAI;AACtB,UAAM;AAAEiB,QAAAA,MAAF;AAAUD,QAAAA,eAAV;AAA2B+B,QAAAA;AAA3B,UAAwC/C,KAA9C;AACA,UAAMgD,SAAS,GAAGC,UAAU,CAACC,OAAX,CAAmBH,QAAnB,CAAlB;;AAEA,UAAIC,SAAJ,EAAe;AACb,gBAAQ,OAAOA,SAAS,CAAC9B,KAAzB;AACE,eAAK,QAAL;AACE,mBAAO8B,SAAS,CAAC9B,KAAjB;;AACF,eAAK,QAAL;AACE,gBAAI8B,SAAS,CAAC9B,KAAV,CAAgBiC,QAAhB,CAAyB,GAAzB,CAAJ,EAAmC;AACjC,kBAAMjC,KAAK,GAAGkC,UAAU,CAACJ,SAAS,CAAC9B,KAAX,CAAxB;;AACA,kBAAImC,MAAM,CAACC,QAAP,CAAgBpC,KAAhB,CAAJ,EAA4B;AAC1B,uBAAOD,MAAM,CAACC,KAAP,IAAgBA,KAAK,GAAG,GAAxB,CAAP;AACD;AACF;;AATL;AAWD;;AAED,UAAIlB,KAAK,CAACuD,aAAV,EAAyB;AACvB,eAAQtC,MAAM,CAACC,KAAP,GAAe,CAAhB,GAAqB,CAA5B;AACD;;AAED,aAAOD,MAAM,CAACC,KAAP,GAAeF,eAAe,CAACqB,MAAhB,CAAuBC,MAA7C;AACD,KA9K4B;;AAAA,SAgL7BkB,eAhL6B,GAgLX,WAAyB;AAAA,UAAxB;AAAEC,QAAAA;AAAF,OAAwB;AACzC,WAAKC,aAAL,GAAqB,KAAK1D,KAAL,CAAWgB,eAAX,CAA2BqB,MAA3B,CAAkCsB,OAAlC,CAA0CF,KAA1C,CAArB;;AAEA,UAAI,KAAKzD,KAAL,CAAW4D,UAAf,EAA2B;AACzB,aAAK5D,KAAL,CAAW4D,UAAX,CAAsB;AAAEH,UAAAA;AAAF,SAAtB;AACD;;AAED,WAAKzD,KAAL,CAAW6D,MAAX,CAAkBJ,KAAK,CAACK,GAAxB;AACD,KAxL4B;;AAAA,SA0L7BC,mBA1L6B,GA0LP,WAAyB;AAAA,UAAxB;AAAEN,QAAAA;AAAF,OAAwB;;AAC7C,UAAI,KAAKzD,KAAL,CAAWgE,cAAf,EAA+B;AAC7B,aAAKhE,KAAL,CAAWgE,cAAX,CAA0B;AAAEP,UAAAA;AAAF,SAA1B;AACD;AACF,KA9L4B;;AAAA,SAgM7BQ,qBAhM6B,GAgML,CAACjE,KAAD,EAAQQ,KAAR,KAAkB;AACxC,UAAM;AAAES,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAA8BhB,KAApC;;AACA,UAAMkE,QAAQ,GAAG,KAAKpB,YAAL,CAAkB9C,KAAlB,CAAjB;;AACA,UAAMmE,WAAW,GAAGC,IAAI,CAACC,GAAL,CAClBH,QAAQ,GAAGlD,eAAe,CAACqB,MAAhB,CAAuBC,MADhB,EAElBrB,MAAM,CAACC,KAFW,CAApB;AAIA,UAAMoD,WAAW,GAAGH,WAAW,GAAGlD,MAAM,CAACC,KAAzC;AAEA,aAAOkD,IAAI,CAACC,GAAL,CAASD,IAAI,CAACG,GAAL,CAAS/D,KAAT,EAAgB8D,WAAhB,CAAT,EAAuC,CAAvC,CAAP;AACD,KA1M4B;;AAAA,SA4M7BE,gBA5M6B,GA4MV,CAACxE,KAAD,EAAQyE,CAAR,KAAc;AAC/B,UAAM;AAAExD,QAAAA;AAAF,UAAajB,KAAnB;;AACA,UAAMkE,QAAQ,GAAG,KAAKpB,YAAL,CAAkB9C,KAAlB,CAAjB;;AACA,UAAM0E,cAAc,GAAGR,QAAQ,IAAIO,CAAC,GAAG,IAAI,CAAZ,CAA/B;AACA,UAAME,YAAY,GAAGD,cAAc,GAAGzD,MAAM,CAACC,KAAP,GAAe,CAArD;AAEA,aAAO,KAAK+C,qBAAL,CAA2BjE,KAA3B,EAAkC2E,YAAlC,CAAP;AACD,KAnN4B;;AAAA,SAqN7BvD,aArN6B,GAqNZZ,KAAD,IAAmB;AACjC,UAAI,KAAKR,KAAL,CAAWuD,aAAf,EAA8B;AAC5BqB,QAAAA,MAAM,CAACC,oBAAP,CAA4B,KAAKC,oBAAjC;AACA,aAAKC,WAAL,IACE,KAAKA,WAAL,CAAiBC,QAAjB,CAA0B;AACxBC,UAAAA,CAAC,EAAE,KAAKhB,qBAAL,CACD,KAAKjE,KADJ,EAED,KAAKwE,gBAAL,CAAsB,KAAKxE,KAA3B,EAAkCQ,KAAlC,CAFC,CADqB;AAKxB0E,UAAAA,QAAQ,EAAE,CAAC,KAAKjF;AALQ,SAA1B,CADF;AASA,aAAKA,SAAL,GAAiB,KAAjB;AACD;AACF,KAnO4B;;AAAA,SAqO7BkF,YArO6B,GAqOd,UAAC3E,KAAD,EAAoC;AAAA,UAApB0E,QAAoB,uEAAT,IAAS;;AACjD,UAAI,KAAI,CAAClF,KAAL,CAAWuD,aAAf,EAA8B;AAC5BqB,QAAAA,MAAM,CAACC,oBAAP,CAA4B,KAAI,CAACC,oBAAjC;AACA,QAAA,KAAI,CAACA,oBAAL,GAA4BF,MAAM,CAACQ,qBAAP,CAA6B,MAAM;AAC7D,UAAA,KAAI,CAACL,WAAL,IACE,KAAI,CAACA,WAAL,CAAiBC,QAAjB,CAA0B;AACxBC,YAAAA,CAAC,EAAE,KAAI,CAACT,gBAAL,CAAsB,KAAI,CAACxE,KAA3B,EAAkCQ,KAAlC,CADqB;AAExB0E,YAAAA;AAFwB,WAA1B,CADF;AAKD,SAN2B,CAA5B;AAOD;AACF,KAhP4B;;AAAA,SAkP7BG,gBAlP6B,GAkPV,MAAM;AAEvB,WAAKnF,eAAL,GAAuB,IAAvB;AACA,WAAKC,iBAAL,GAAyB,KAAzB;AACD,KAtP4B;;AAAA,SAwP7BmF,cAxP6B,GAwPZ,MAAM;AAIrBV,MAAAA,MAAM,CAACQ,qBAAP,CAA6B,MAAM;AACjC,YAAI,KAAKjF,iBAAT,EAA4B;AAC1B;AACD;;AACD,aAAKD,eAAL,GAAuB,KAAvB;AACD,OALD;AAMD,KAlQ4B;;AAAA,SAoQ7BqF,0BApQ6B,GAoQA,MAAM;AAEjC,WAAKpF,iBAAL,GAAyB,IAAzB;AACD,KAvQ4B;;AAAA,SAyQ7BqF,wBAzQ6B,GAyQF,MAAM;AAE/B,WAAKrF,iBAAL,GAAyB,KAAzB;AACA,WAAKD,eAAL,GAAuB,KAAvB;AACD,KA7Q4B;;AAG3B,QAAIuF,iBAAiB,GAAG,CAAxB;;AAEA,QAAI,KAAKzF,KAAL,CAAWuD,aAAf,EAA8B;AAC5B,UAAMW,QAAQ,GAAG,KAAKpB,YAAL,CAAkB,KAAK9C,KAAvB,CAAjB;;AACA,UAAI,CAACkE,QAAL,EAAe;AACbuB,QAAAA,iBAAiB,GAAG,CAApB;AACD;AACF;;AAED,QAAMC,aAAa,GACjB,KAAK1F,KAAL,CAAWuD,aAAX,IAA4B,KAAKvD,KAAL,CAAWiB,MAAX,CAAkBC,KAA9C,GACI;AACE+D,MAAAA,CAAC,EAAE,KAAKT,gBAAL,CACD,KAAKxE,KADJ,EAED,KAAKA,KAAL,CAAWgB,eAAX,CAA2BG,KAF1B,CADL;AAKEwE,MAAAA,CAAC,EAAE;AALL,KADJ,GAQIC,SATN;AAWA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IAAI7D,QAAQ,CAAC8D,KAAb,CAAmBN,iBAAnB,CADD;AAEXd,MAAAA,YAAY,EAAE,IAAI1C,QAAQ,CAAC8D,KAAb,CAAmB,CAAnB,CAFH;AAGXL,MAAAA;AAHW,KAAb;AAKD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKhG,KAAL,CAAWuD,aAAX,IAA4B,KAAKnD,sBAAL,EAA5B;AACD;;AAED6F,EAAAA,kBAAkB,CAACC,SAAD,EAAsB;AACtC,QAAMC,YAAY,GAAG,KAAKrD,YAAL,CAAkBoD,SAAlB,CAArB;;AACA,QAAME,eAAe,GAAG,KAAKtD,YAAL,CAAkB,KAAK9C,KAAvB,CAAxB;;AACA,QAAMqG,YAAY,GAChB,OAAO,KAAK3C,aAAZ,KAA8B,QAA9B,GACI,KAAKA,aADT,GAEI,KAAK1D,KAAL,CAAWgB,eAAX,CAA2BG,KAHjC;AAKA,SAAKuC,aAAL,GAAqB,IAArB;;AAEA,QAAIyC,YAAY,KAAKC,eAAjB,IAAoCA,eAAxC,EAAyD;AACvD,WAAKP,KAAL,CAAWC,UAAX,CAAsBQ,QAAtB,CAA+B,CAA/B;AACD;;AAED,QACEJ,SAAS,CAAClF,eAAV,CAA0BqB,MAA1B,CAAiCC,MAAjC,KACE,KAAKtC,KAAL,CAAWgB,eAAX,CAA2BqB,MAA3B,CAAkCC,MADpC,IAEA4D,SAAS,CAACjF,MAAV,CAAiBC,KAAjB,KAA2B,KAAKlB,KAAL,CAAWiB,MAAX,CAAkBC,KAH/C,EAIE;AACA,WAAKiE,YAAL,CAAkB,KAAKnF,KAAL,CAAWgB,eAAX,CAA2BG,KAA7C,EAAoD,KAApD;AACD,KAND,MAMO,IAAI+E,SAAS,CAAClF,eAAV,CAA0BG,KAA1B,KAAoCkF,YAAxC,EAAsD;AAC3D,WAAKlB,YAAL,CAAkB,KAAKnF,KAAL,CAAWgB,eAAX,CAA2BG,KAA7C;AACD;AACF;;AAEDoF,EAAAA,oBAAoB,GAAG;AACrB,SAAKzF,qBAAL;AACD;;AAkND0F,EAAAA,MAAM,GAAG;AACP,QAAM;AAAEzE,MAAAA,QAAF;AAAYf,MAAAA,eAAZ;AAA6BuC,MAAAA,aAA7B;AAA4CkD,MAAAA;AAA5C,QAAwD,KAAKzG,KAAnE;AACA,QAAM;AAAEqC,MAAAA;AAAF,QAAarB,eAAnB;;AACA,QAAMkD,QAAQ,GAAG,KAAKpB,YAAL,CAAkB,KAAK9C,KAAvB,CAAjB;;AACA,QAAMmE,WAAW,GAAGD,QAAQ,GAAG7B,MAAM,CAACC,MAAtC;AAGA,QAAMF,UAAU,GAAG,CAAC,CAAC,CAAF,EAAK,GAAGC,MAAM,CAACqE,GAAP,CAAW,CAACzB,CAAD,EAAIR,CAAJ,KAAUA,CAArB,CAAR,CAAnB;AACA,QAAMzC,UAAU,GAAGC,QAAQ,CAACC,QAAT,CAAkB,KAAK2D,KAAL,CAAWlB,YAA7B,EAA2C,CAAC,CAA5C,CAAnB;AAEA,WACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACjD,MAAM,CAACiF,MAAR,EAAgB,KAAK3G,KAAL,CAAW4G,KAA3B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,aAAa,EAAC,MADhB;AAEE,MAAA,KAAK,EAAE,CACLlF,MAAM,CAACmF,kBADF,EAELtD,aAAa,GACT;AAAErC,QAAAA,KAAK,EAAEiD,WAAT;AAAsBvB,QAAAA,SAAS,EAAE,CAAC;AAAEZ,UAAAA;AAAF,SAAD;AAAjC,OADS,GAET,IAJC,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKH,gBAAL,mBACI,KAAK7B,KADT;AAECkB,MAAAA,KAAK,EAAEgD;AAFR,OATH,CADF,EAeE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAExC,MAAM,CAACoF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,UAAV;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,yBAAyB,EAAC,SAF5B;AAGE,MAAA,aAAa,EAAEvD,aAHjB;AAIE,MAAA,OAAO,EAAEkD,OAJX;AAKE,MAAA,sBAAsB,EAAE,KAL1B;AAME,MAAA,YAAY,EAAE,KANhB;AAOE,MAAA,8BAA8B,EAAE,KAPlC;AAQE,MAAA,gCAAgC,EAAE,KARpC;AASE,MAAA,cAAc,EAAC,OATjB;AAUE,MAAA,qBAAqB,EAAE,CACrB/E,MAAM,CAACqF,UADc,EAErBxD,aAAa,GAAG,IAAH,GAAU7B,MAAM,CAACsF,SAFT,CAVzB;AAcE,MAAA,mBAAmB,EAAE,CAdvB;AAeE,MAAA,QAAQ,EAAE/E,QAAQ,CAACgF,KAAT,CACR,CACE;AACEC,QAAAA,WAAW,EAAE;AACXC,UAAAA,aAAa,EAAE;AAAElC,YAAAA,CAAC,EAAE,KAAKY,KAAL,CAAWlB;AAAhB;AADJ;AADf,OADF,CADQ,EAQR;AAAElF,QAAAA;AAAF,OARQ,CAfZ;AAyBE,MAAA,iBAAiB,EAAE,KAAK4F,gBAzB1B;AA0BE,MAAA,eAAe,EAAE,KAAKC,cA1BxB;AA2BE,MAAA,qBAAqB,EAAE,KAAKC,0BA3B9B;AA4BE,MAAA,mBAAmB,EAAE,KAAKC,wBA5B5B;AA6BE,MAAA,aAAa,EAAE,KAAKK,KAAL,CAAWH,aA7B5B;AA8BE,MAAA,GAAG,EAAE0B,EAAE,IAAK,KAAKrC,WAAL,GAAmBqC,EAAE,IAAIA,EAAE,CAACC,OAAH,EA9BvC;AAAA;AAAA;AAAA;AAAA;AAAA,OAgCGhF,MAAM,CAACqE,GAAP,CAAW,CAACjD,KAAD,EAAQgB,CAAR,KAAc;AACxB,UAAMlC,WAAW,GAAGH,UAAU,CAACsE,GAAX,CAClBY,UAAU,IAAKA,UAAU,KAAK7C,CAAf,GAAmB,CAAnB,GAAuB,GADpB,CAApB;AAGA,UAAM8C,OAAO,GAAGtF,QAAQ,CAACC,QAAT,CACd,KAAK2D,KAAL,CAAWC,UADG,EAEd/D,QAAQ,CAACI,WAAT,CAAqB;AACnBC,QAAAA,UADmB;AAEnBG,QAAAA;AAFmB,OAArB,CAFc,CAAhB;;AAOA,UAAMf,KAAK,GAAG,KAAKH,YAAL,CAAkB;AAAEoC,QAAAA;AAAF,OAAlB,CAAd;;AACA,UAAM+D,IAAI,GAAG,KAAKxH,KAAL,CAAWyH,UAAX,GACT,KAAKzH,KAAL,CAAWyH,UAAX,CAAsB;AAAEhE,QAAAA;AAAF,OAAtB,CADS,GAET,IAFJ;AAGA,UAAMiE,KAAK,GAAG,KAAK1H,KAAL,CAAW2H,WAAX,GACV,KAAK3H,KAAL,CAAW2H,WAAX,CAAuB;AAAElE,QAAAA;AAAF,OAAvB,CADU,GAEV,IAFJ;AAIA,UAAMV,QAAQ,GAAG,EAAjB;AAEAA,MAAAA,QAAQ,CAACwE,OAAT,GAAmBA,OAAnB;;AAEA,UAAIC,IAAJ,EAAU;AACR,YAAIhG,KAAJ,EAAW;AACTuB,UAAAA,QAAQ,CAAC6E,UAAT,GAAsB,CAAtB;AACD,SAFD,MAEO;AACL7E,UAAAA,QAAQ,CAAC8E,OAAT,GAAmB,EAAnB;AACD;AACF;;AAED,UAAMC,cAAc,GAAG7E,UAAU,CAACC,OAAX,CAAmB,KAAKlD,KAAL,CAAW+C,QAA9B,CAAvB;AACA,UAAMgF,UAAU,GACbD,cAAc,IACb,OAAOA,cAAc,CAAC5G,KAAtB,KAAgC,WADlC,IAEAqC,aAAa,KAAK,IAHpB;AAIA,UAAMyE,iBAAiB,GAAG,EAA1B;;AAEA,UAAID,UAAJ,EAAgB;AACdhF,QAAAA,QAAQ,CAAC7B,KAAT,GAAiBgD,QAAjB;AACD;;AAED,UAAI4D,cAAc,IAAI,OAAOA,cAAc,CAACG,IAAtB,KAA+B,QAArD,EAA+D;AAC7DD,QAAAA,iBAAiB,CAACC,IAAlB,GAAyBH,cAAc,CAACG,IAAxC;AACD,OAFD,MAEO,IAAI,CAACF,UAAL,EAAiB;AACtBC,QAAAA,iBAAiB,CAACC,IAAlB,GAAyB,CAAzB;AACD;;AAED,UAAIC,kBAAkB,GAAG,KAAKlI,KAAL,CAAWmI,qBAAX,CAAiC;AACxD1E,QAAAA;AADwD,OAAjC,CAAzB;AAIAyE,MAAAA,kBAAkB,GAChB,OAAOA,kBAAP,KAA8B,WAA9B,GACIA,kBADJ,GAEI,KAAKlI,KAAL,CAAWyB,YAAX,CAAwB;AAAEgC,QAAAA;AAAF,OAAxB,CAHN;AAKA,UAAM2E,SAAS,GAAG3D,CAAC,KAAKzD,eAAe,CAACG,KAAxC;AAEA,aACE,oBAAC,aAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,GAAG,EAAEsC,KAAK,CAACK,GAFb;AAGE,QAAA,MAAM,EAAE,KAAK9D,KAAL,CAAWqI,SAAX,CAAqB;AAAE5E,UAAAA;AAAF,SAArB,CAHV;AAIE,QAAA,UAAU,EAAE,KAAKzD,KAAL,CAAWsI,aAAX,CAAyB;AAAE7E,UAAAA;AAAF,SAAzB,CAJd;AAKE,QAAA,kBAAkB,EAAEyE,kBALtB;AAME,QAAA,mBAAmB,EACjBE,SAAS,GAAG,CAAC,QAAD,EAAW,UAAX,CAAH,GAA4B,QAPzC;AASE,QAAA,0BAA0B,EAAC,QAT7B;AAUE,QAAA,iBAAiB,EAAC,QAVpB;AAWE,QAAA,mBAAmB,EAAEA,SAAS,GAAG,CAAC,UAAD,CAAH,GAAkB,EAXlD;AAYE,QAAA,UAAU,EAAE,KAAKpI,KAAL,CAAWuI,UAZzB;AAaE,QAAA,YAAY,EAAE,KAAKvI,KAAL,CAAWwI,YAb3B;AAcE,QAAA,YAAY,EAAE,CAdhB;AAeE,QAAA,OAAO,EAAE,MAAM,KAAKhF,eAAL,CAAqB;AAAEC,UAAAA;AAAF,SAArB,CAfjB;AAgBE,QAAA,WAAW,EAAE,MAAM,KAAKM,mBAAL,CAAyB;AAAEN,UAAAA;AAAF,SAAzB,CAhBrB;AAiBE,QAAA,KAAK,EAAEuE,iBAjBT;AAAA;AAAA;AAAA;AAAA;AAAA,SAmBE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAC,MAApB;AAA2B,QAAA,KAAK,EAAEtG,MAAM,CAACsF,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE,CACLtF,MAAM,CAAC+G,OADF,EAEL1F,QAFK,EAGL+E,cAHK,EAILpG,MAAM,CAACsF,SAJF,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGQ,IARH,EASGhG,KATH,CADF,EAYGkG,KAAK,GACJ,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE,CACLhG,MAAM,CAACgG,KADF,EAEL;AAAEH,UAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWC;AAAtB,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG4B,KANH,CADI,GASF,IArBN,CAnBF,CADF;AA6CD,KAxGA,CAhCH,CADF,CAfF,CADF;AA8JD;;AApdwE;AAAtD7H,M,CACZ6I,S,qBACFlJ,qB;AACH+D,EAAAA,aAAa,EAAEjE,SAAS,CAACqJ,I;AACzBlC,EAAAA,OAAO,EAAEnH,SAAS,CAACqJ,I;AACnBJ,EAAAA,UAAU,EAAEhJ,aAAa,CAACmJ,SAAd,CAAwBH,U;AACpCC,EAAAA,YAAY,EAAEjJ,aAAa,CAACmJ,SAAd,CAAwBF,Y;AACtC/G,EAAAA,YAAY,EAAEnC,SAAS,CAACsJ,I;AACxBN,EAAAA,aAAa,EAAEhJ,SAAS,CAACsJ,I;AACzBT,EAAAA,qBAAqB,EAAE7I,SAAS,CAACsJ,I;AACjCP,EAAAA,SAAS,EAAE/I,SAAS,CAACsJ,I;AACrBnB,EAAAA,UAAU,EAAEnI,SAAS,CAACsJ,I;AACtBrH,EAAAA,WAAW,EAAEjC,SAAS,CAACsJ,I;AACvB9G,EAAAA,eAAe,EAAExC,SAAS,CAACsJ,I;AAC3BhF,EAAAA,UAAU,EAAEtE,SAAS,CAACsJ,I;AACtB5E,EAAAA,cAAc,EAAE1E,SAAS,CAACsJ,I;AAC1BhH,EAAAA,UAAU,EAAEtC,SAAS,CAACuJ,G;AACtBjC,EAAAA,KAAK,EAAEtH,SAAS,CAACuJ;;AAjBAhJ,M,CAoBZiJ,Y,GAAe;AACpBrH,EAAAA,YAAY,EAAE;AAAA,QAAC;AAAEgC,MAAAA;AAAF,KAAD;AAAA,WACZ,OAAOA,KAAK,CAACsF,KAAb,KAAuB,QAAvB,GAAkCtF,KAAK,CAACsF,KAAN,CAAYC,WAAZ,EAAlC,GAA8DvF,KAAK,CAACsF,KADxD;AAAA,GADM;AAGpBT,EAAAA,aAAa,EAAE;AAAA,QAAC;AAAE7E,MAAAA;AAAF,KAAD;AAAA,WACb,OAAOA,KAAK,CAACwF,UAAb,KAA4B,WAA5B,GAA0CxF,KAAK,CAACwF,UAAhD,GAA6D,IADhD;AAAA,GAHK;AAKpBd,EAAAA,qBAAqB,EAAE;AAAA,QAAC;AAAE1E,MAAAA;AAAF,KAAD;AAAA,WAAyBA,KAAK,CAACyE,kBAA/B;AAAA,GALH;AAMpBG,EAAAA,SAAS,EAAE;AAAA,QAAC;AAAE5E,MAAAA;AAAF,KAAD;AAAA,WAAyBA,KAAK,CAACyF,MAA/B;AAAA;AANS,C;AAmcxB,IAAMxH,MAAM,GAAGuB,UAAU,CAACkG,MAAX,CAAkB;AAC/BnC,EAAAA,SAAS,EAAE;AACTiB,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BnB,EAAAA,MAAM,EAAE;AACNsC,IAAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAyB,MAAzB,GAAwC;AAD5C,GAJuB;AAO/B3C,EAAAA,MAAM,EAAE;AACN4C,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,SAAS,EAAE,CAFL;AAGNC,IAAAA,WAAW,EAAE,OAHP;AAINC,IAAAA,aAAa,EAAE,GAJT;AAKNC,IAAAA,YAAY,EAAE1G,UAAU,CAAC2G,aALnB;AAMNC,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EAAE7G,UAAU,CAAC2G;AADP,KANR;AAUNG,IAAAA,MAAM,EAAEV,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC;AAVlC,GAPuB;AAmB/BvC,EAAAA,UAAU,EAAE;AACViD,IAAAA,aAAa,EAAE,KADL;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAnBmB;AAuB/BtI,EAAAA,QAAQ,EAAE;AACR4H,IAAAA,eAAe,EAAE,aADT;AAERW,IAAAA,KAAK,EAAE,OAFC;AAGRC,IAAAA,MAAM,EAAE;AAHA,GAvBqB;AA4B/B1B,EAAAA,OAAO,EAAE;AACPR,IAAAA,IAAI,EAAE,CADC;AAEPJ,IAAAA,OAAO,EAAE,CAFF;AAGPuC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GA5BsB;AAkC/B3C,EAAAA,KAAK,EAAE;AACL3F,IAAAA,QAAQ,EAAE,UADL;AAELuI,IAAAA,GAAG,EAAE,CAFA;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAlCwB;AAuC/B1D,EAAAA,kBAAkB,EAAE;AAClB9E,IAAAA,QAAQ,EAAE,UADQ;AAElBuI,IAAAA,GAAG,EAAE,CAFa;AAGlBE,IAAAA,IAAI,EAAE,CAHY;AAIlBD,IAAAA,KAAK,EAAE,CAJW;AAKlBE,IAAAA,MAAM,EAAE;AALU,GAvCW;AA8C/B9H,EAAAA,SAAS,EAAE;AACT4G,IAAAA,eAAe,EAAE,SADR;AAETxH,IAAAA,QAAQ,EAAE,UAFD;AAGTyI,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,MAAM,EAAE,CAJC;AAKTF,IAAAA,KAAK,EAAE,CALE;AAMTT,IAAAA,MAAM,EAAE;AANC;AA9CoB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  NativeModules,\n  StyleSheet,\n  View,\n  ScrollView,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport { SceneRendererPropType } from './PropTypes';\nimport type { Scene, SceneRendererProps } from './TypeDefinitions';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype IndicatorProps<T> = SceneRendererProps<T> & {\n  width: number,\n};\n\ntype Props<T> = SceneRendererProps<T> & {\n  scrollEnabled?: boolean,\n  bounces?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  getLabelText: (scene: Scene<T>) => ?string,\n  getAccessible: (scene: Scene<T>) => ?boolean,\n  getAccessibilityLabel: (scene: Scene<T>) => ?string,\n  getTestID: (scene: Scene<T>) => ?string,\n  renderLabel?: (scene: Scene<T>) => React.Node,\n  renderIcon?: (scene: Scene<T>) => React.Node,\n  renderBadge?: (scene: Scene<T>) => React.Node,\n  renderIndicator?: (props: IndicatorProps<T>) => React.Node,\n  onTabPress?: (scene: Scene<T>) => mixed,\n  onTabLongPress?: (scene: Scene<T>) => mixed,\n  tabStyle?: ViewStyleProp,\n  indicatorStyle?: ViewStyleProp,\n  labelStyle?: TextStyleProp,\n  style?: ViewStyleProp,\n};\n\ntype State = {|\n  visibility: Animated.Value,\n  scrollAmount: Animated.Value,\n  initialOffset: ?{| x: number, y: number |},\n|};\n\nconst useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\n\nexport default class TabBar<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    scrollEnabled: PropTypes.bool,\n    bounces: PropTypes.bool,\n    pressColor: TouchableItem.propTypes.pressColor,\n    pressOpacity: TouchableItem.propTypes.pressOpacity,\n    getLabelText: PropTypes.func,\n    getAccessible: PropTypes.func,\n    getAccessibilityLabel: PropTypes.func,\n    getTestID: PropTypes.func,\n    renderIcon: PropTypes.func,\n    renderLabel: PropTypes.func,\n    renderIndicator: PropTypes.func,\n    onTabPress: PropTypes.func,\n    onTabLongPress: PropTypes.func,\n    labelStyle: PropTypes.any,\n    style: PropTypes.any,\n  };\n\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<T>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<T>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<T>) => route.accessibilityLabel,\n    getTestID: ({ route }: Scene<T>) => route.testID,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    let initialVisibility = 1;\n\n    if (this.props.scrollEnabled) {\n      const tabWidth = this._getTabWidth(this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    const initialOffset =\n      this.props.scrollEnabled && this.props.layout.width\n        ? {\n            x: this._getScrollAmount(\n              this.props,\n              this.props.navigationState.index\n            ),\n            y: 0,\n          }\n        : undefined;\n\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset,\n    };\n  }\n\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const prevTabWidth = this._getTabWidth(prevProps);\n    const currentTabWidth = this._getTabWidth(this.props);\n    const pendingIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this.props.navigationState.index;\n\n    this._pendingIndex = null;\n\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n\n  _scrollView: ?ScrollView;\n  _isIntial: boolean = true;\n  _isManualScroll: boolean = false;\n  _isMomentumScroll: boolean = false;\n  _pendingIndex: ?number;\n  _scrollResetCallback: any;\n  _lastPanX: ?number;\n  _lastOffsetX: ?number;\n  _panXListener: string;\n  _offsetXListener: string;\n\n  _startTrackingPosition = () => {\n    this._offsetXListener = this.props.offsetX.addListener(({ value }) => {\n      this._lastOffsetX = value;\n      this._handlePosition();\n    });\n    this._panXListener = this.props.panX.addListener(({ value }) => {\n      this._lastPanX = value;\n      this._handlePosition();\n    });\n  };\n\n  _stopTrackingPosition = () => {\n    this.props.offsetX.removeListener(this._offsetXListener);\n    this.props.panX.removeListener(this._panXListener);\n  };\n\n  _handlePosition = () => {\n    const { navigationState, layout } = this.props;\n\n    if (layout.width === 0) {\n      // Don't do anything if we don't have layout yet\n      return;\n    }\n\n    const panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n    const offsetX =\n      typeof this._lastOffsetX === 'number'\n        ? this._lastOffsetX\n        : -navigationState.index * layout.width;\n\n    const value = (panX + offsetX) / -(layout.width || 0.001);\n\n    this._adjustScroll(value);\n  };\n\n  _renderLabel = (scene: Scene<*>) => {\n    if (typeof this.props.renderLabel !== 'undefined') {\n      return this.props.renderLabel(scene);\n    }\n    const label = this.props.getLabelText(scene);\n    if (typeof label !== 'string') {\n      return null;\n    }\n    return (\n      <Animated.Text style={[styles.tabLabel, this.props.labelStyle]}>\n        {label}\n      </Animated.Text>\n    );\n  };\n\n  _renderIndicator = (props: IndicatorProps<T>) => {\n    if (typeof this.props.renderIndicator !== 'undefined') {\n      return this.props.renderIndicator(props);\n    }\n    const { width, position, navigationState } = props;\n    const translateX = Animated.multiply(\n      Animated.multiply(\n        position.interpolate({\n          inputRange: [-1, navigationState.routes.length],\n          outputRange: [-1, navigationState.routes.length],\n          extrapolate: 'clamp',\n        }),\n        width\n      ),\n      I18nManager.isRTL ? -1 : 1\n    );\n    return (\n      <Animated.View\n        style={[\n          styles.indicator,\n          { width, transform: [{ translateX }] },\n          this.props.indicatorStyle,\n        ]}\n      />\n    );\n  };\n\n  _getTabWidth = props => {\n    const { layout, navigationState, tabStyle } = props;\n    const flattened = StyleSheet.flatten(tabStyle);\n\n    if (flattened) {\n      switch (typeof flattened.width) {\n        case 'number':\n          return flattened.width;\n        case 'string':\n          if (flattened.width.endsWith('%')) {\n            const width = parseFloat(flattened.width);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n    }\n\n    if (props.scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / navigationState.routes.length;\n  };\n\n  _handleTabPress = ({ route }: Scene<*>) => {\n    this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n\n    if (this.props.onTabPress) {\n      this.props.onTabPress({ route });\n    }\n\n    this.props.jumpTo(route.key);\n  };\n\n  _handleTabLongPress = ({ route }: Scene<*>) => {\n    if (this.props.onTabLongPress) {\n      this.props.onTabLongPress({ route });\n    }\n  };\n\n  _normalizeScrollValue = (props, value) => {\n    const { layout, navigationState } = props;\n    const tabWidth = this._getTabWidth(props);\n    const tabBarWidth = Math.max(\n      tabWidth * navigationState.routes.length,\n      layout.width\n    );\n    const maxDistance = tabBarWidth - layout.width;\n\n    return Math.max(Math.min(value, maxDistance), 0);\n  };\n\n  _getScrollAmount = (props, i) => {\n    const { layout } = props;\n    const tabWidth = this._getTabWidth(props);\n    const centerDistance = tabWidth * (i + 1 / 2);\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this._normalizeScrollValue(props, scrollAmount);\n  };\n\n  _adjustScroll = (value: number) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollView &&\n        this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(\n            this.props,\n            this._getScrollAmount(this.props, value)\n          ),\n          animated: !this._isIntial, // Disable animation for the initial render\n        });\n\n      this._isIntial = false;\n    }\n  };\n\n  _resetScroll = (value: number, animated = true) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollResetCallback = global.requestAnimationFrame(() => {\n        this._scrollView &&\n          this._scrollView.scrollTo({\n            x: this._getScrollAmount(this.props, value),\n            animated,\n          });\n      });\n    }\n  };\n\n  _handleBeginDrag = () => {\n    // onScrollBeginDrag fires when user touches the ScrollView\n    this._isManualScroll = true;\n    this._isMomentumScroll = false;\n  };\n\n  _handleEndDrag = () => {\n    // onScrollEndDrag fires when user lifts his finger\n    // onMomentumScrollBegin fires after touch end\n    // run the logic in next frame so we get onMomentumScrollBegin first\n    global.requestAnimationFrame(() => {\n      if (this._isMomentumScroll) {\n        return;\n      }\n      this._isManualScroll = false;\n    });\n  };\n\n  _handleMomentumScrollBegin = () => {\n    // onMomentumScrollBegin fires on flick, as well as programmatic scroll\n    this._isMomentumScroll = true;\n  };\n\n  _handleMomentumScrollEnd = () => {\n    // onMomentumScrollEnd fires when the scroll finishes\n    this._isMomentumScroll = false;\n    this._isManualScroll = false;\n  };\n\n  render() {\n    const { position, navigationState, scrollEnabled, bounces } = this.props;\n    const { routes } = navigationState;\n    const tabWidth = this._getTabWidth(this.props);\n    const tabBarWidth = tabWidth * routes.length;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const translateX = Animated.multiply(this.state.scrollAmount, -1);\n\n    return (\n      <Animated.View style={[styles.tabBar, this.props.style]}>\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled\n              ? { width: tabBarWidth, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {this._renderIndicator({\n            ...this.props,\n            width: tabWidth,\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled ? null : styles.container,\n            ]}\n            scrollEventThrottle={1}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.state.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver }\n            )}\n            onScrollBeginDrag={this._handleBeginDrag}\n            onScrollEndDrag={this._handleEndDrag}\n            onMomentumScrollBegin={this._handleMomentumScrollBegin}\n            onMomentumScrollEnd={this._handleMomentumScrollEnd}\n            contentOffset={this.state.initialOffset}\n            ref={el => (this._scrollView = el && el.getNode())}\n          >\n            {routes.map((route, i) => {\n              const outputRange = inputRange.map(\n                inputIndex => (inputIndex === i ? 1 : 0.7)\n              );\n              const opacity = Animated.multiply(\n                this.state.visibility,\n                position.interpolate({\n                  inputRange,\n                  outputRange,\n                })\n              );\n              const label = this._renderLabel({ route });\n              const icon = this.props.renderIcon\n                ? this.props.renderIcon({ route })\n                : null;\n              const badge = this.props.renderBadge\n                ? this.props.renderBadge({ route })\n                : null;\n\n              const tabStyle = {};\n\n              tabStyle.opacity = opacity;\n\n              if (icon) {\n                if (label) {\n                  tabStyle.paddingTop = 8;\n                } else {\n                  tabStyle.padding = 12;\n                }\n              }\n\n              const passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n              const isWidthSet =\n                (passedTabStyle &&\n                  typeof passedTabStyle.width !== 'undefined') ||\n                scrollEnabled === true;\n              const tabContainerStyle = {};\n\n              if (isWidthSet) {\n                tabStyle.width = tabWidth;\n              }\n\n              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n                tabContainerStyle.flex = passedTabStyle.flex;\n              } else if (!isWidthSet) {\n                tabContainerStyle.flex = 1;\n              }\n\n              let accessibilityLabel = this.props.getAccessibilityLabel({\n                route,\n              });\n\n              accessibilityLabel =\n                typeof accessibilityLabel !== 'undefined'\n                  ? accessibilityLabel\n                  : this.props.getLabelText({ route });\n\n              const isFocused = i === navigationState.index;\n\n              return (\n                <TouchableItem\n                  borderless\n                  key={route.key}\n                  testID={this.props.getTestID({ route })}\n                  accessible={this.props.getAccessible({ route })}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityTraits={\n                    isFocused ? ['button', 'selected'] : 'button'\n                  }\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  accessibilityStates={isFocused ? ['selected'] : []}\n                  pressColor={this.props.pressColor}\n                  pressOpacity={this.props.pressOpacity}\n                  delayPressIn={0}\n                  onPress={() => this._handleTabPress({ route })}\n                  onLongPress={() => this._handleTabLongPress({ route })}\n                  style={tabContainerStyle}\n                >\n                  <View pointerEvents=\"none\" style={styles.container}>\n                    <Animated.View\n                      style={[\n                        styles.tabItem,\n                        tabStyle,\n                        passedTabStyle,\n                        styles.container,\n                      ]}\n                    >\n                      {icon}\n                      {label}\n                    </Animated.View>\n                    {badge ? (\n                      <Animated.View\n                        style={[\n                          styles.badge,\n                          { opacity: this.state.visibility },\n                        ]}\n                      >\n                        {badge}\n                      </Animated.View>\n                    ) : null}\n                  </View>\n                </TouchableItem>\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? ('auto': any) : 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    // We don't need zIndex on Android, disable it since it's buggy\n    zIndex: Platform.OS === 'android' ? 0 : 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8,\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}