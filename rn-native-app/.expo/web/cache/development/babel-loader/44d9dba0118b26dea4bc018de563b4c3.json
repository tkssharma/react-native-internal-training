{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/TabView.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TabBar from \"./TabBar\";\nimport PagerDefault from \"./PagerDefault\";\nimport { NavigationStatePropType } from \"./PropTypes\";\nexport default class TabView extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this._mounted = false;\n\n    this._renderScene = props => {\n      return this.props.renderScene(props);\n    };\n\n    this._handleLayout = e => {\n      var {\n        height,\n        width\n      } = e.nativeEvent.layout;\n\n      if (this.state.layout.width === width && this.state.layout.height === height) {\n        return;\n      }\n\n      this.state.panX.setValue(0);\n      this.state.offsetX.setValue(-this.props.navigationState.index * width);\n      this.state.layoutXY.setValue({\n        x: width || 0.001,\n        y: height || 0.001\n      });\n      this.setState({\n        layout: {\n          measured: true,\n          height,\n          width\n        }\n      });\n    };\n\n    this._buildSceneRendererProps = () => ({\n      panX: this.state.panX,\n      offsetX: this.state.offsetX,\n      position: this.state.position,\n      layout: this.state.layout,\n      navigationState: this.props.navigationState,\n      jumpTo: this._jumpTo,\n      useNativeDriver: this.props.useNativeDriver === true\n    });\n\n    this._jumpTo = key => {\n      if (!this._mounted) {\n        return;\n      }\n\n      var {\n        canJumpToTab,\n        navigationState\n      } = this.props;\n      var index = navigationState.routes.findIndex(route => route.key === key);\n\n      if (!canJumpToTab(navigationState.routes[index])) {\n        return;\n      }\n\n      if (index !== navigationState.index) {\n        this.props.onIndexChange(index);\n      }\n    };\n\n    var {\n      navigationState: _navigationState\n    } = this.props;\n\n    var layout = _objectSpread({}, this.props.initialLayout, {\n      measured: false\n    });\n\n    var panX = new Animated.Value(0);\n    var offsetX = new Animated.Value(-_navigationState.index * layout.width);\n    var layoutXY = new Animated.ValueXY({\n      x: layout.width || 0.001,\n      y: layout.height || 0.001\n    });\n    var position = Animated.multiply(Animated.divide(Animated.add(panX, offsetX), layoutXY.x), -1);\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position,\n      renderUnfocusedScenes: false\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    setTimeout(() => this.setState({\n      renderUnfocusedScenes: true\n    }), 0);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      renderPager,\n      renderTabBar,\n      tabBarPosition\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"navigationState\", \"onIndexChange\", \"initialLayout\", \"renderScene\", \"renderPager\", \"renderTabBar\", \"tabBarPosition\"]);\n\n    var props = this._buildSceneRendererProps();\n\n    return React.createElement(View, {\n      collapsable: false,\n      style: [styles.container, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      }\n    }, tabBarPosition === 'top' && renderTabBar(props), React.createElement(View, {\n      onLayout: this._handleLayout,\n      style: styles.pager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      }\n    }, renderPager(_objectSpread({}, props, {}, rest, {\n      panX: this.state.panX,\n      offsetX: this.state.offsetX,\n      children: navigationState.routes.map((route, index) => {\n        var isFocused = this.props.navigationState.index === index;\n        var scene;\n\n        if (isFocused || this.state.renderUnfocusedScenes) {\n          scene = this._renderScene(_objectSpread({}, props, {\n            route\n          }));\n        } else {\n          scene = React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            }\n          });\n        }\n\n        if (React.isValidElement(scene)) {\n          scene = React.cloneElement(scene, {\n            key: route.key\n          });\n        }\n\n        return scene;\n      })\n    }))), tabBarPosition === 'bottom' && renderTabBar(props));\n  }\n\n}\nTabView.propTypes = {\n  navigationState: NavigationStatePropType.isRequired,\n  onIndexChange: PropTypes.func.isRequired,\n  initialLayout: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }),\n  canJumpToTab: PropTypes.func.isRequired,\n  renderPager: PropTypes.func.isRequired,\n  renderScene: PropTypes.func.isRequired,\n  renderTabBar: PropTypes.func,\n  tabBarPosition: PropTypes.oneOf(['top', 'bottom'])\n};\nTabView.defaultProps = {\n  canJumpToTab: () => true,\n  tabBarPosition: 'top',\n  renderTabBar: props => React.createElement(TabBar, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  })),\n  renderPager: props => React.createElement(PagerDefault, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  })),\n  getTestID: (_ref) => {\n    var {\n      route\n    } = _ref;\n    return typeof route.testID === 'string' ? route.testID : undefined;\n  },\n  initialLayout: {\n    height: 0,\n    width: 0\n  },\n  useNativeDriver: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pager: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/TabView.js"],"names":["React","PropTypes","TabBar","PagerDefault","NavigationStatePropType","TabView","Component","constructor","props","_mounted","_renderScene","renderScene","_handleLayout","e","height","width","nativeEvent","layout","state","panX","setValue","offsetX","navigationState","index","layoutXY","x","y","setState","measured","_buildSceneRendererProps","position","jumpTo","_jumpTo","useNativeDriver","key","canJumpToTab","routes","findIndex","route","onIndexChange","initialLayout","Animated","Value","ValueXY","multiply","divide","add","renderUnfocusedScenes","componentDidMount","setTimeout","componentWillUnmount","render","renderPager","renderTabBar","tabBarPosition","rest","styles","container","style","pager","children","map","isFocused","scene","isValidElement","cloneElement","propTypes","isRequired","func","shape","number","oneOf","defaultProps","getTestID","testID","undefined","StyleSheet","create","flex","overflow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport TabBar from './TabBar';\nimport PagerDefault from './PagerDefault';\nimport { NavigationStatePropType } from './PropTypes';\nimport type {\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  PagerCommonProps,\n  PagerExtraProps,\n} from './TypeDefinitions';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props<T> = PagerCommonProps<T> &\n  PagerExtraProps & {\n    navigationState: NavigationState<T>,\n    onIndexChange: (index: number) => mixed,\n    initialLayout?: Layout,\n    renderPager: (props: *) => React.Node,\n    renderScene: (props: SceneRendererProps<T> & Scene<T>) => React.Node,\n    renderTabBar: (props: SceneRendererProps<T>) => React.Node,\n    tabBarPosition: 'top' | 'bottom',\n    useNativeDriver?: boolean,\n    style?: ViewStyleProp,\n  };\n\ntype State = {|\n  layout: Layout & { measured: boolean },\n  layoutXY: Animated.ValueXY,\n  panX: Animated.Value,\n  offsetX: Animated.Value,\n  position: any,\n  renderUnfocusedScenes: boolean,\n|};\n\nexport default class TabView<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    navigationState: NavigationStatePropType.isRequired,\n    onIndexChange: PropTypes.func.isRequired,\n    initialLayout: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n    canJumpToTab: PropTypes.func.isRequired,\n    renderPager: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    renderTabBar: PropTypes.func,\n    tabBarPosition: PropTypes.oneOf(['top', 'bottom']),\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    tabBarPosition: 'top',\n    renderTabBar: (props: *) => <TabBar {...props} />,\n    renderPager: (props: *) => <PagerDefault {...props} />,\n    getTestID: ({ route }: Scene<*>) =>\n      typeof route.testID === 'string' ? route.testID : undefined,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n    useNativeDriver: false,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState } = this.props;\n    const layout = {\n      ...this.props.initialLayout,\n      measured: false,\n    };\n\n    const panX = new Animated.Value(0);\n    const offsetX = new Animated.Value(-navigationState.index * layout.width);\n    const layoutXY = new Animated.ValueXY({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: layout.width || 0.001,\n      y: layout.height || 0.001,\n    });\n    const position = Animated.multiply(\n      Animated.divide(Animated.add(panX, offsetX), layoutXY.x),\n      -1\n    );\n\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position,\n      renderUnfocusedScenes: false,\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n\n    // Delay rendering of unfocused scenes for improved startup\n    setTimeout(() => this.setState({ renderUnfocusedScenes: true }), 0);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _mounted: boolean = false;\n  _nextIndex: ?number;\n\n  _renderScene = (props: SceneRendererProps<T> & Scene<T>) => {\n    return this.props.renderScene(props);\n  };\n\n  _handleLayout = (e: any) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.state.panX.setValue(0);\n    this.state.offsetX.setValue(-this.props.navigationState.index * width);\n    this.state.layoutXY.setValue({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: width || 0.001,\n      y: height || 0.001,\n    });\n    this.setState({\n      layout: {\n        measured: true,\n        height,\n        width,\n      },\n    });\n  };\n\n  _buildSceneRendererProps = (): SceneRendererProps<*> => ({\n    panX: this.state.panX,\n    offsetX: this.state.offsetX,\n    position: this.state.position,\n    layout: this.state.layout,\n    navigationState: this.props.navigationState,\n    jumpTo: this._jumpTo,\n    useNativeDriver: this.props.useNativeDriver === true,\n  });\n\n  _jumpTo = (key: string) => {\n    if (!this._mounted) {\n      // We are no longer mounted, this is a no-op\n      return;\n    }\n\n    const { canJumpToTab, navigationState } = this.props;\n    const index = navigationState.routes.findIndex(route => route.key === key);\n\n    if (!canJumpToTab(navigationState.routes[index])) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      /* eslint-enable no-unused-vars */\n      renderPager,\n      renderTabBar,\n      tabBarPosition,\n      ...rest\n    } = this.props;\n\n    const props = this._buildSceneRendererProps();\n\n    return (\n      <View collapsable={false} style={[styles.container, this.props.style]}>\n        {tabBarPosition === 'top' && renderTabBar(props)}\n        <View onLayout={this._handleLayout} style={styles.pager}>\n          {renderPager({\n            ...props,\n            ...rest,\n            panX: this.state.panX,\n            offsetX: this.state.offsetX,\n            children: navigationState.routes.map((route, index) => {\n              const isFocused = this.props.navigationState.index === index;\n\n              let scene;\n\n              if (isFocused || this.state.renderUnfocusedScenes) {\n                scene = this._renderScene({\n                  ...props,\n                  route,\n                });\n              } else {\n                scene = <View />;\n              }\n\n              if (React.isValidElement(scene)) {\n                /* $FlowFixMe: https://github.com/facebook/flow/issues/4775 */\n                scene = React.cloneElement(scene, { key: route.key });\n              }\n\n              return scene;\n            }),\n          })}\n        </View>\n        {tabBarPosition === 'bottom' && renderTabBar(props)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pager: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}