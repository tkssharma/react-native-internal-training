{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { SafeAreaView } from '@react-navigation/native';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component {\n  render() {\n    var _this$props = this.props,\n        {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: onPress,\n      onLongPress: onLongPress,\n      testID: testID,\n      hitSlop: {\n        left: 15,\n        right: 15,\n        top: 0,\n        bottom: 5\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: accessibilityRole,\n      accessibilityStates: accessibilityStates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      }\n    }, React.createElement(View, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      }\n    })));\n  }\n\n}\n\nclass TabBarBottom extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    };\n\n    this._handleKeyboardShow = () => this.setState({\n      keyboard: true\n    }, () => Animated.timing(this.state.visible, {\n      toValue: 0,\n      duration: 150,\n      useNativeDriver: true\n    }).start());\n\n    this._handleKeyboardHide = () => Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true\n    }).start(() => {\n      this.setState({\n        keyboard: false\n      });\n    });\n\n    this._handleLayout = e => {\n      var {\n        layout\n      } = this.state;\n      var {\n        height,\n        width\n      } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      this.setState({\n        layout: {\n          height,\n          width\n        }\n      });\n    };\n\n    this._renderLabel = (_ref) => {\n      var {\n        route,\n        focused\n      } = _ref;\n      var {\n        activeTintColor,\n        inactiveTintColor,\n        labelStyle,\n        showLabel,\n        showIcon,\n        allowFontScaling\n      } = this.props;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var label = this.props.getLabelText({\n        route\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          }\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          route,\n          focused,\n          tintColor\n        });\n      }\n\n      return label;\n    };\n\n    this._renderIcon = (_ref2) => {\n      var {\n        route,\n        focused\n      } = _ref2;\n      var {\n        navigation,\n        activeTintColor,\n        inactiveTintColor,\n        renderIcon,\n        showIcon,\n        showLabel\n      } = this.props;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = this._shouldUseHorizontalLabels();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      });\n    };\n\n    this._shouldUseHorizontalLabels = () => {\n      var {\n        routes\n      } = this.props.navigation.state;\n      var {\n        isLandscape,\n        dimensions,\n        adaptive,\n        tabStyle\n      } = this.props;\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  render() {\n    var {\n      navigation,\n      keyboardHidesTabBar,\n      activeBackgroundColor,\n      inactiveBackgroundColor,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle\n    } = this.props;\n    var {\n      routes\n    } = navigation.state;\n    var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n    return React.createElement(Animated.View, {\n      style: [styles.container, keyboardHidesTabBar ? {\n        transform: [{\n          translateY: this.state.visible.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.state.layout.height, 0]\n          })\n        }],\n        position: this.state.keyboard ? 'absolute' : null\n      } : null],\n      pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      }\n    }, React.createElement(SafeAreaView, {\n      style: tabBarStyle,\n      forceInset: safeAreaInset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      }\n    }, routes.map((route, index) => {\n      var focused = index === navigation.state.index;\n      var scene = {\n        route,\n        focused\n      };\n      var accessibilityLabel = this.props.getAccessibilityLabel({\n        route\n      });\n      var accessibilityRole = this.props.getAccessibilityRole({\n        route\n      });\n      var accessibilityStates = this.props.getAccessibilityStates(scene);\n      var testID = this.props.getTestID({\n        route\n      });\n      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n      var ButtonComponent = this.props.getButtonComponent({\n        route\n      }) || TouchableWithoutFeedbackWrapper;\n      return React.createElement(ButtonComponent, {\n        key: route.key,\n        onPress: () => onTabPress({\n          route\n        }),\n        onLongPress: () => onTabLongPress({\n          route\n        }),\n        testID: testID,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        style: [styles.tab, {\n          backgroundColor\n        }, this._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        }\n      }, this._renderIcon(scene), this._renderLabel(scene));\n    })));\n  }\n\n}\n\nTabBarBottom.defaultProps = {\n  keyboardHidesTabBar: false,\n  activeTintColor: '#007AFF',\n  activeBackgroundColor: 'transparent',\n  inactiveTintColor: '#8E8E93',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n};\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: '#fff',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    flexDirection: 'row'\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js"],"names":["React","SafeAreaView","CrossFadeIcon","withDimensions","majorVersion","parseInt","Platform","Version","isIos","OS","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","TouchableWithoutFeedbackWrapper","Component","render","props","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","left","right","top","bottom","TabBarBottom","state","layout","height","width","keyboard","visible","Animated","Value","_handleKeyboardShow","setState","timing","toValue","duration","useNativeDriver","start","_handleKeyboardHide","_handleLayout","e","nativeEvent","_renderLabel","route","focused","activeTintColor","inactiveTintColor","labelStyle","showLabel","showIcon","allowFontScaling","label","getLabelText","tintColor","styles","color","_shouldUseHorizontalLabels","labelBeside","labelBeneath","_renderIcon","navigation","renderIcon","horizontal","activeOpacity","inactiveOpacity","iconWithExplicitHeight","iconWithoutLabel","iconWithLabel","routes","isLandscape","dimensions","adaptive","tabStyle","isPad","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","componentDidMount","Keyboard","addListener","componentWillUnmount","removeListener","keyboardHidesTabBar","activeBackgroundColor","inactiveBackgroundColor","onTabPress","onTabLongPress","safeAreaInset","style","tabBarStyle","tabBar","tabBarCompact","tabBarRegular","container","transform","translateY","interpolate","inputRange","outputRange","position","map","index","scene","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","backgroundColor","ButtonComponent","getButtonComponent","key","tab","tabLandscape","tabPortrait","defaultProps","DEFAULT_HEIGHT","COMPACT_HEIGHT","create","borderTopWidth","hairlineWidth","borderTopColor","flexDirection","elevation","flex","alignItems","justifyContent","textAlign","fontSize","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n} from 'react-native';\nimport { SafeAreaView } from '@react-navigation/native';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\n\nexport type TabBarOptions = {\n  keyboardHidesTabBar: boolean,\n  activeTintColor?: string,\n  inactiveTintColor?: string,\n  activeBackgroundColor?: string,\n  inactiveBackgroundColor?: string,\n  allowFontScaling: boolean,\n  showLabel: boolean,\n  showIcon: boolean,\n  labelStyle: any,\n  tabStyle: any,\n  adaptive?: boolean,\n  style: any,\n};\n\ntype Props = TabBarOptions & {\n  navigation: any,\n  descriptors: any,\n  jumpTo: any,\n  onTabPress: any,\n  onTabLongPress: any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getAccessibilityRole: (props: { route: any }) => string,\n  getAccessibilityStates: (props: { route: any }) => string[],\n  getButtonComponent: ({ route: any }) => any,\n  getLabelText: ({ route: any }) => any,\n  getTestID: (props: { route: any }) => string,\n  renderIcon: any,\n  dimensions: { width: number, height: number },\n  isLandscape: boolean,\n  safeAreaInset: { top: string, right: string, bottom: string, left: string },\n};\n\ntype State = {\n  layout: { height: number, width: number },\n  keyboard: boolean,\n  visible: Animated.Value,\n};\n\nconst majorVersion = parseInt(Platform.Version, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<*> {\n  render() {\n    const {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...props\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...props} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<Props, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: false,\n    activeTintColor: '#007AFF',\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#8E8E93',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' },\n  };\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _handleLayout = e => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _renderLabel = ({ route, focused }) => {\n    const {\n      activeTintColor,\n      inactiveTintColor,\n      labelStyle,\n      showLabel,\n      showIcon,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && this._shouldUseHorizontalLabels()\n              ? styles.labelBeside\n              : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ route, focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused }) => {\n    const {\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n      showLabel,\n    } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const { isLandscape, dimensions, adaptive, tabStyle } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      activeBackgroundColor,\n      inactiveBackgroundColor,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n\n    const tabBarStyle = [\n      styles.tabBar,\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : null,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: '#fff',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    flexDirection: 'row',\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}