{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/PagerPan.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { PagerRendererPropType } from \"./PropTypes\";\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 300,\n  friction: 35\n};\nexport default class PagerPan extends React.Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this._currentIndex = this.props.navigationState.index;\n\n    this._isMovingHorizontally = (evt, gestureState) => {\n      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n    };\n\n    this._canMoveScreen = (evt, gestureState) => {\n      if (this.props.swipeEnabled === false) {\n        return false;\n      }\n\n      var {\n        navigationState: {\n          routes\n        }\n      } = this.props;\n      return this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && this._currentIndex > 0 || gestureState.dx <= -DEAD_ZONE && this._currentIndex < routes.length - 1);\n    };\n\n    this._startGesture = () => {\n      this.props.onSwipeStart && this.props.onSwipeStart();\n      this.props.panX.stopAnimation();\n    };\n\n    this._respondToGesture = (evt, gestureState) => {\n      var {\n        navigationState: {\n          routes,\n          index\n        }\n      } = this.props;\n\n      if (gestureState.dx > 0 && index <= 0 || gestureState.dx < 0 && index >= routes.length - 1) {\n        return;\n      }\n\n      this.props.panX.setValue(gestureState.dx);\n    };\n\n    this._finishGesture = (evt, gestureState) => {\n      var {\n        navigationState,\n        layout,\n        swipeDistanceThreshold = layout.width / 1.75\n      } = this.props;\n      var {\n        swipeVelocityThreshold = 0.15\n      } = this.props;\n      this.props.onSwipeEnd && this.props.onSwipeEnd();\n\n      if (Platform.OS === 'android') {\n        swipeVelocityThreshold /= 1000000;\n      }\n\n      var currentIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this._currentIndex;\n      var nextIndex = currentIndex;\n\n      if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n        nextIndex = Math.round(Math.min(Math.max(0, currentIndex - gestureState.dx / Math.abs(gestureState.dx)), navigationState.routes.length - 1));\n        this._currentIndex = nextIndex;\n      }\n\n      if (!isFinite(nextIndex) || !this.props.canJumpToTab({\n        route: this.props.navigationState.routes[nextIndex]\n      })) {\n        nextIndex = currentIndex;\n      }\n\n      this._transitionTo(nextIndex);\n    };\n\n    this._transitionTo = function (index) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var offset = -index * _this.props.layout.width;\n      var route = _this.props.navigationState.routes[index];\n\n      if (_this.props.animationEnabled === false || animated === false) {\n        _this.props.panX.setValue(0);\n\n        _this.props.offsetX.setValue(offset);\n\n        _this.props.jumpTo(route.key);\n\n        return;\n      }\n\n      var {\n        timing\n      } = DefaultTransitionSpec,\n          transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, [\"timing\"]);\n\n      Animated.parallel([timing(_this.props.panX, _objectSpread({}, transitionConfig, {\n        toValue: 0\n      })), timing(_this.props.offsetX, _objectSpread({}, transitionConfig, {\n        toValue: offset\n      }))]).start((_ref) => {\n        var {\n          finished\n        } = _ref;\n\n        if (finished) {\n          _this.props.jumpTo(route.key);\n\n          _this.props.onAnimationEnd && _this.props.onAnimationEnd();\n          _this._pendingIndex = null;\n        }\n      });\n      _this._pendingIndex = index;\n    };\n\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this._canMoveScreen,\n      onMoveShouldSetPanResponderCapture: this._canMoveScreen,\n      onPanResponderGrant: this._startGesture,\n      onPanResponderMove: this._respondToGesture,\n      onPanResponderTerminate: this._finishGesture,\n      onPanResponderRelease: this._finishGesture,\n      onPanResponderTerminationRequest: () => true\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    this._currentIndex = this.props.navigationState.index;\n\n    if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n      this._transitionTo(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== this.props.navigationState.index) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n\n  render() {\n    var {\n      panX,\n      offsetX,\n      navigationState,\n      layout,\n      children\n    } = this.props;\n    var {\n      width\n    } = layout;\n    var {\n      routes\n    } = navigationState;\n    var maxTranslate = width * (routes.length - 1);\n    var translateX = Animated.multiply(Animated.add(panX, offsetX).interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp'\n    }), I18nManager.isRTL ? -1 : 1);\n    return React.createElement(Animated.View, _extends({\n      style: [styles.sheet, width ? {\n        width: routes.length * width,\n        transform: [{\n          translateX\n        }]\n      } : null]\n    }, this._panResponder.panHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      }\n    }), React.Children.map(children, (child, i) => {\n      var route = navigationState.routes[i];\n      var focused = i === navigationState.index;\n      return React.createElement(View, {\n        key: route.key,\n        testID: this.props.getTestID({\n          route\n        }),\n        style: width ? {\n          width\n        } : focused ? StyleSheet.absoluteFill : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, focused || width ? child : null);\n    }));\n  }\n\n}\nPagerPan.propTypes = _objectSpread({}, PagerRendererPropType, {\n  swipeDistanceThreshold: PropTypes.number,\n  swipeVelocityThreshold: PropTypes.number\n});\nPagerPan.defaultProps = {\n  canJumpToTab: () => true,\n  initialLayout: {\n    height: 0,\n    width: 0\n  }\n};\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/PagerPan.js"],"names":["React","PropTypes","PagerRendererPropType","DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","tension","friction","PagerPan","Component","_currentIndex","props","navigationState","index","_isMovingHorizontally","evt","gestureState","Math","abs","dx","dy","vx","vy","_canMoveScreen","swipeEnabled","routes","length","_startGesture","onSwipeStart","panX","stopAnimation","_respondToGesture","setValue","_finishGesture","layout","swipeDistanceThreshold","width","swipeVelocityThreshold","onSwipeEnd","Platform","OS","currentIndex","_pendingIndex","nextIndex","round","min","max","isFinite","canJumpToTab","route","_transitionTo","animated","offset","animationEnabled","offsetX","jumpTo","key","transitionConfig","parallel","toValue","start","finished","onAnimationEnd","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","componentDidUpdate","prevProps","render","children","maxTranslate","translateX","multiply","add","interpolate","inputRange","outputRange","extrapolate","I18nManager","isRTL","styles","sheet","transform","panHandlers","Children","map","child","i","focused","getTestID","StyleSheet","absoluteFill","propTypes","number","defaultProps","initialLayout","height","flex","flexDirection","alignItems"],"mappings":";;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;AASA,SAASC,qBAAT;AAmCA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,MAAM,EAAEC,QAAQ,CAACC,MADW;AAE5BC,EAAAA,OAAO,EAAE,GAFmB;AAG5BC,EAAAA,QAAQ,EAAE;AAHkB,CAA9B;AAMA,eAAe,MAAMC,QAAN,SAA6BV,KAAK,CAACW,SAAnC,CAAuD;AAAA;AAAA;;AAAA;AAAA;AAAA,SA+BpEC,aA/BoE,GA+BpD,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,KA/ByB;;AAAA,SAkCpEC,qBAlCoE,GAkC5C,CAACC,GAAD,EAAoBC,YAApB,KAAmD;AACzE,aACEC,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAb,GAAkB,CAA3B,CAA5B,IACAH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAb,GAAkB,CAA3B,CAF9B;AAID,KAvCmE;;AAAA,SAyCpEC,cAzCoE,GAyCnD,CAACR,GAAD,EAAoBC,YAApB,KAAmD;AAClE,UAAI,KAAKL,KAAL,CAAWa,YAAX,KAA4B,KAAhC,EAAuC;AACrC,eAAO,KAAP;AACD;;AAED,UAAM;AACJZ,QAAAA,eAAe,EAAE;AAAEa,UAAAA;AAAF;AADb,UAEF,KAAKd,KAFT;AAIA,aACE,KAAKG,qBAAL,CAA2BC,GAA3B,EAAgCC,YAAhC,MACEA,YAAY,CAACG,EAAb,IAAmBlB,SAAnB,IAAgC,KAAKS,aAAL,GAAqB,CAAtD,IACEM,YAAY,CAACG,EAAb,IAAmB,CAAClB,SAApB,IACC,KAAKS,aAAL,GAAqBe,MAAM,CAACC,MAAP,GAAgB,CAHzC,CADF;AAMD,KAxDmE;;AAAA,SA0DpEC,aA1DoE,GA0DpD,MAAM;AACpB,WAAKhB,KAAL,CAAWiB,YAAX,IAA2B,KAAKjB,KAAL,CAAWiB,YAAX,EAA3B;AACA,WAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,aAAhB;AACD,KA7DmE;;AAAA,SA+DpEC,iBA/DoE,GA+DhD,CAAChB,GAAD,EAAoBC,YAApB,KAAmD;AACrE,UAAM;AACJJ,QAAAA,eAAe,EAAE;AAAEa,UAAAA,MAAF;AAAUZ,UAAAA;AAAV;AADb,UAEF,KAAKF,KAFT;;AAIA,UAEGK,YAAY,CAACG,EAAb,GAAkB,CAAlB,IAAuBN,KAAK,IAAI,CAAjC,IAECG,YAAY,CAACG,EAAb,GAAkB,CAAlB,IAAuBN,KAAK,IAAIY,MAAM,CAACC,MAAP,GAAgB,CAJnD,EAKE;AACA;AACD;;AAED,WAAKf,KAAL,CAAWkB,IAAX,CAAgBG,QAAhB,CAAyBhB,YAAY,CAACG,EAAtC;AACD,KA9EmE;;AAAA,SAgFpEc,cAhFoE,GAgFnD,CAAClB,GAAD,EAAoBC,YAApB,KAAmD;AAClE,UAAM;AACJJ,QAAAA,eADI;AAEJsB,QAAAA,MAFI;AAGJC,QAAAA,sBAAsB,GAAGD,MAAM,CAACE,KAAP,GAAe;AAHpC,UAIF,KAAKzB,KAJT;AAMA,UAAI;AAAE0B,QAAAA,sBAAsB,GAAG;AAA3B,UAAoC,KAAK1B,KAA7C;AAEA,WAAKA,KAAL,CAAW2B,UAAX,IAAyB,KAAK3B,KAAL,CAAW2B,UAAX,EAAzB;;AAEA,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAG7BH,QAAAA,sBAAsB,IAAI,OAA1B;AACD;;AAED,UAAMI,YAAY,GAChB,OAAO,KAAKC,aAAZ,KAA8B,QAA9B,GACI,KAAKA,aADT,GAEI,KAAKhC,aAHX;AAKA,UAAIiC,SAAS,GAAGF,YAAhB;;AAEA,UACExB,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAtB,CAA5B,IACAH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAtB,CAD5B,KAECL,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BgB,sBAA5B,IACClB,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BgB,sBAH9B,CADF,EAKE;AACAM,QAAAA,SAAS,GAAG1B,IAAI,CAAC2B,KAAL,CACV3B,IAAI,CAAC4B,GAAL,CACE5B,IAAI,CAAC6B,GAAL,CACE,CADF,EAEEL,YAAY,GAAGzB,YAAY,CAACG,EAAb,GAAkBF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,CAFnC,CADF,EAKEP,eAAe,CAACa,MAAhB,CAAuBC,MAAvB,GAAgC,CALlC,CADU,CAAZ;AAUA,aAAKhB,aAAL,GAAqBiC,SAArB;AACD;;AAED,UACE,CAACI,QAAQ,CAACJ,SAAD,CAAT,IACA,CAAC,KAAKhC,KAAL,CAAWqC,YAAX,CAAwB;AACvBC,QAAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWC,eAAX,CAA2Ba,MAA3B,CAAkCkB,SAAlC;AADgB,OAAxB,CAFH,EAKE;AACAA,QAAAA,SAAS,GAAGF,YAAZ;AACD;;AAED,WAAKS,aAAL,CAAmBP,SAAnB;AACD,KArImE;;AAAA,SAuIpEO,aAvIoE,GAuIpD,UAACrC,KAAD,EAA6C;AAAA,UAA7BsC,QAA6B,uEAAT,IAAS;AAC3D,UAAMC,MAAM,GAAG,CAACvC,KAAD,GAAS,KAAI,CAACF,KAAL,CAAWuB,MAAX,CAAkBE,KAA1C;AACA,UAAMa,KAAK,GAAG,KAAI,CAACtC,KAAL,CAAWC,eAAX,CAA2Ba,MAA3B,CAAkCZ,KAAlC,CAAd;;AAEA,UAAI,KAAI,CAACF,KAAL,CAAW0C,gBAAX,KAAgC,KAAhC,IAAyCF,QAAQ,KAAK,KAA1D,EAAiE;AAC/D,QAAA,KAAI,CAACxC,KAAL,CAAWkB,IAAX,CAAgBG,QAAhB,CAAyB,CAAzB;;AACA,QAAA,KAAI,CAACrB,KAAL,CAAW2C,OAAX,CAAmBtB,QAAnB,CAA4BoB,MAA5B;;AACA,QAAA,KAAI,CAACzC,KAAL,CAAW4C,MAAX,CAAkBN,KAAK,CAACO,GAAxB;;AACA;AACD;;AAED,UAAM;AAAErD,QAAAA;AAAF,UAAkCD,qBAAxC;AAAA,UAAmBuD,gBAAnB,4BAAwCvD,qBAAxC;;AAEAE,MAAAA,QAAQ,CAACsD,QAAT,CAAkB,CAChBvD,MAAM,CAAC,KAAI,CAACQ,KAAL,CAAWkB,IAAZ,oBACD4B,gBADC;AAEJE,QAAAA,OAAO,EAAE;AAFL,SADU,EAKhBxD,MAAM,CAAC,KAAI,CAACQ,KAAL,CAAW2C,OAAZ,oBACDG,gBADC;AAEJE,QAAAA,OAAO,EAAEP;AAFL,SALU,CAAlB,EASGQ,KATH,CASS,UAAkB;AAAA,YAAjB;AAAEC,UAAAA;AAAF,SAAiB;;AACzB,YAAIA,QAAJ,EAAc;AACZ,UAAA,KAAI,CAAClD,KAAL,CAAW4C,MAAX,CAAkBN,KAAK,CAACO,GAAxB;;AACA,UAAA,KAAI,CAAC7C,KAAL,CAAWmD,cAAX,IAA6B,KAAI,CAACnD,KAAL,CAAWmD,cAAX,EAA7B;AACA,UAAA,KAAI,CAACpB,aAAL,GAAqB,IAArB;AACD;AACF,OAfD;AAiBA,MAAA,KAAI,CAACA,aAAL,GAAqB7B,KAArB;AACD,KAtKmE;;AAAA,SAwKpEkD,aAxKoE,GAwKpDC,YAAY,CAACC,MAAb,CAAoB;AAClCC,MAAAA,2BAA2B,EAAE,KAAK3C,cADA;AAElC4C,MAAAA,kCAAkC,EAAE,KAAK5C,cAFP;AAGlC6C,MAAAA,mBAAmB,EAAE,KAAKzC,aAHQ;AAIlC0C,MAAAA,kBAAkB,EAAE,KAAKtC,iBAJS;AAKlCuC,MAAAA,uBAAuB,EAAE,KAAKrC,cALI;AAMlCsC,MAAAA,qBAAqB,EAAE,KAAKtC,cANM;AAOlCuC,MAAAA,gCAAgC,EAAE,MAAM;AAPN,KAApB,CAxKoD;AAAA;;AAepEC,EAAAA,kBAAkB,CAACC,SAAD,EAAsB;AACtC,SAAKhE,aAAL,GAAqB,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,KAAhD;;AAEA,QACE6D,SAAS,CAAC9D,eAAV,CAA0Ba,MAA1B,CAAiCC,MAAjC,KACE,KAAKf,KAAL,CAAWC,eAAX,CAA2Ba,MAA3B,CAAkCC,MADpC,IAEAgD,SAAS,CAACxC,MAAV,CAAiBE,KAAjB,KAA2B,KAAKzB,KAAL,CAAWuB,MAAX,CAAkBE,KAH/C,EAIE;AACA,WAAKc,aAAL,CAAmB,KAAKvC,KAAL,CAAWC,eAAX,CAA2BC,KAA9C,EAAqD,KAArD;AACD,KAND,MAMO,IACL6D,SAAS,CAAC9D,eAAV,CAA0BC,KAA1B,KAAoC,KAAKF,KAAL,CAAWC,eAAX,CAA2BC,KAD1D,EAEL;AACA,WAAKqC,aAAL,CAAmB,KAAKvC,KAAL,CAAWC,eAAX,CAA2BC,KAA9C;AACD;AACF;;AAqJD8D,EAAAA,MAAM,GAAG;AACP,QAAM;AAAE9C,MAAAA,IAAF;AAAQyB,MAAAA,OAAR;AAAiB1C,MAAAA,eAAjB;AAAkCsB,MAAAA,MAAlC;AAA0C0C,MAAAA;AAA1C,QAAuD,KAAKjE,KAAlE;AACA,QAAM;AAAEyB,MAAAA;AAAF,QAAYF,MAAlB;AACA,QAAM;AAAET,MAAAA;AAAF,QAAab,eAAnB;AACA,QAAMiE,YAAY,GAAGzC,KAAK,IAAIX,MAAM,CAACC,MAAP,GAAgB,CAApB,CAA1B;AACA,QAAMoD,UAAU,GAAG1E,QAAQ,CAAC2E,QAAT,CACjB3E,QAAQ,CAAC4E,GAAT,CAAanD,IAAb,EAAmByB,OAAnB,EAA4B2B,WAA5B,CAAwC;AACtCC,MAAAA,UAAU,EAAE,CAAC,CAACL,YAAF,EAAgB,CAAhB,CAD0B;AAEtCM,MAAAA,WAAW,EAAE,CAAC,CAACN,YAAF,EAAgB,CAAhB,CAFyB;AAGtCO,MAAAA,WAAW,EAAE;AAHyB,KAAxC,CADiB,EAMjBC,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CANR,CAAnB;AASA,WACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACC,KADF,EAELpD,KAAK,GACD;AACEA,QAAAA,KAAK,EAAEX,MAAM,CAACC,MAAP,GAAgBU,KADzB;AAEEqD,QAAAA,SAAS,EAAE,CAAC;AAAEX,UAAAA;AAAF,SAAD;AAFb,OADC,GAKD,IAPC;AADT,OAUM,KAAKf,aAAL,CAAmB2B,WAVzB;AAAA;AAAA;AAAA;AAAA;AAAA,QAYG5F,KAAK,CAAC6F,QAAN,CAAeC,GAAf,CAAmBhB,QAAnB,EAA6B,CAACiB,KAAD,EAAQC,CAAR,KAAc;AAC1C,UAAM7C,KAAK,GAAGrC,eAAe,CAACa,MAAhB,CAAuBqE,CAAvB,CAAd;AACA,UAAMC,OAAO,GAAGD,CAAC,KAAKlF,eAAe,CAACC,KAAtC;AAEA,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEoC,KAAK,CAACO,GADb;AAEE,QAAA,MAAM,EAAE,KAAK7C,KAAL,CAAWqF,SAAX,CAAqB;AAAE/C,UAAAA;AAAF,SAArB,CAFV;AAGE,QAAA,KAAK,EACHb,KAAK,GAAG;AAAEA,UAAAA;AAAF,SAAH,GAAe2D,OAAO,GAAGE,UAAU,CAACC,YAAd,GAA6B,IAJ5D;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGH,OAAO,IAAI3D,KAAX,GAAmByD,KAAnB,GAA2B,IAP9B,CADF;AAWD,KAfA,CAZH,CADF;AA+BD;;AA/NmE;AAAjDrF,Q,CACZ2F,S,qBACFnG,qB;AACHmC,EAAAA,sBAAsB,EAAEpC,SAAS,CAACqG,M;AAClC/D,EAAAA,sBAAsB,EAAEtC,SAAS,CAACqG;;AAJjB5F,Q,CAOZ6F,Y,GAAe;AACpBrD,EAAAA,YAAY,EAAE,MAAM,IADA;AAEpBsD,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbnE,IAAAA,KAAK,EAAE;AAFM;AAFK,C;AA2NxB,IAAMmD,MAAM,GAAGU,UAAU,CAAChC,MAAX,CAAkB;AAC/BuB,EAAAA,KAAK,EAAE;AACLgB,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,UAAU,EAAE;AAHP;AADwB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  I18nManager,\n  PanResponder,\n  StyleSheet,\n  View,\n  Platform,\n} from 'react-native';\nimport { PagerRendererPropType } from './PropTypes';\nimport type { PagerRendererProps } from './TypeDefinitions';\n\ntype GestureEvent = {\n  nativeEvent: {\n    changedTouches: Array<*>,\n    identifier: number,\n    locationX: number,\n    locationY: number,\n    pageX: number,\n    pageY: number,\n    target: number,\n    timestamp: number,\n    touches: Array<*>,\n  },\n};\n\ntype GestureState = {\n  stateID: number,\n  moveX: number,\n  moveY: number,\n  x0: number,\n  y0: number,\n  dx: number,\n  dy: number,\n  vx: number,\n  vy: number,\n  numberActiveTouches: number,\n};\n\ntype Props<T> = PagerRendererProps<T> & {\n  swipeDistanceThreshold?: number,\n  swipeVelocityThreshold?: number,\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 300,\n  friction: 35,\n};\n\nexport default class PagerPan<T: *> extends React.Component<Props<T>> {\n  static propTypes = {\n    ...PagerRendererPropType,\n    swipeDistanceThreshold: PropTypes.number,\n    swipeVelocityThreshold: PropTypes.number,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props<T>) {\n    this._currentIndex = this.props.navigationState.index;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._transitionTo(this.props.navigationState.index, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n\n  _currentIndex = this.props.navigationState.index;\n  _pendingIndex: ?number;\n\n  _isMovingHorizontally = (evt: GestureEvent, gestureState: GestureState) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  _canMoveScreen = (evt: GestureEvent, gestureState: GestureState) => {\n    if (this.props.swipeEnabled === false) {\n      return false;\n    }\n\n    const {\n      navigationState: { routes },\n    } = this.props;\n\n    return (\n      this._isMovingHorizontally(evt, gestureState) &&\n      ((gestureState.dx >= DEAD_ZONE && this._currentIndex > 0) ||\n        (gestureState.dx <= -DEAD_ZONE &&\n          this._currentIndex < routes.length - 1))\n    );\n  };\n\n  _startGesture = () => {\n    this.props.onSwipeStart && this.props.onSwipeStart();\n    this.props.panX.stopAnimation();\n  };\n\n  _respondToGesture = (evt: GestureEvent, gestureState: GestureState) => {\n    const {\n      navigationState: { routes, index },\n    } = this.props;\n\n    if (\n      // swiping left\n      (gestureState.dx > 0 && index <= 0) ||\n      // swiping right\n      (gestureState.dx < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    this.props.panX.setValue(gestureState.dx);\n  };\n\n  _finishGesture = (evt: GestureEvent, gestureState: GestureState) => {\n    const {\n      navigationState,\n      layout,\n      swipeDistanceThreshold = layout.width / 1.75,\n    } = this.props;\n\n    let { swipeVelocityThreshold = 0.15 } = this.props;\n\n    this.props.onSwipeEnd && this.props.onSwipeEnd();\n\n    if (Platform.OS === 'android') {\n      // on Android, velocity is way lower due to timestamp being in nanosecond\n      // normalize it to have the same velocity on both iOS and Android\n      swipeVelocityThreshold /= 1000000;\n    }\n\n    const currentIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this._currentIndex;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          navigationState.routes.length - 1\n        )\n      );\n\n      this._currentIndex = nextIndex;\n    }\n\n    if (\n      !isFinite(nextIndex) ||\n      !this.props.canJumpToTab({\n        route: this.props.navigationState.routes[nextIndex],\n      })\n    ) {\n      nextIndex = currentIndex;\n    }\n\n    this._transitionTo(nextIndex);\n  };\n\n  _transitionTo = (index: number, animated: boolean = true) => {\n    const offset = -index * this.props.layout.width;\n    const route = this.props.navigationState.routes[index];\n\n    if (this.props.animationEnabled === false || animated === false) {\n      this.props.panX.setValue(0);\n      this.props.offsetX.setValue(offset);\n      this.props.jumpTo(route.key);\n      return;\n    }\n\n    const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n    Animated.parallel([\n      timing(this.props.panX, {\n        ...transitionConfig,\n        toValue: 0,\n      }),\n      timing(this.props.offsetX, {\n        ...transitionConfig,\n        toValue: offset,\n      }),\n    ]).start(({ finished }) => {\n      if (finished) {\n        this.props.jumpTo(route.key);\n        this.props.onAnimationEnd && this.props.onAnimationEnd();\n        this._pendingIndex = null;\n      }\n    });\n\n    this._pendingIndex = index;\n  };\n\n  _panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: this._canMoveScreen,\n    onMoveShouldSetPanResponderCapture: this._canMoveScreen,\n    onPanResponderGrant: this._startGesture,\n    onPanResponderMove: this._respondToGesture,\n    onPanResponderTerminate: this._finishGesture,\n    onPanResponderRelease: this._finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  render() {\n    const { panX, offsetX, navigationState, layout, children } = this.props;\n    const { width } = layout;\n    const { routes } = navigationState;\n    const maxTranslate = width * (routes.length - 1);\n    const translateX = Animated.multiply(\n      Animated.add(panX, offsetX).interpolate({\n        inputRange: [-maxTranslate, 0],\n        outputRange: [-maxTranslate, 0],\n        extrapolate: 'clamp',\n      }),\n      I18nManager.isRTL ? -1 : 1\n    );\n\n    return (\n      <Animated.View\n        style={[\n          styles.sheet,\n          width\n            ? {\n                width: routes.length * width,\n                transform: [{ translateX }],\n              }\n            : null,\n        ]}\n        {...this._panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = navigationState.routes[i];\n          const focused = i === navigationState.index;\n\n          return (\n            <View\n              key={route.key}\n              testID={this.props.getTestID({ route })}\n              style={\n                width ? { width } : focused ? StyleSheet.absoluteFill : null\n              }\n            >\n              {focused || width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}