{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/PagerScroll.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PagerRendererPropType } from \"./PropTypes\";\nexport default class PagerScroll extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this._isIdle = true;\n    this._isInitial = true;\n\n    this._setInitialPage = () => {\n      if (this.props.layout.width) {\n        this._isInitial = true;\n\n        this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);\n      }\n\n      setTimeout(() => {\n        this._isInitial = false;\n      }, 50);\n    };\n\n    this._scrollTo = function (x) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_this._isIdle && _this._scrollView) {\n        _this._scrollView.scrollTo({\n          x,\n          animated: animated && _this.props.animationEnabled !== false\n        });\n      }\n    };\n\n    this._handleMomentumScrollEnd = e => {\n      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / this.props.layout.width);\n      var nextRoute = this.props.navigationState.routes[nextIndex];\n\n      if (this.props.canJumpToTab({\n        route: nextRoute\n      })) {\n        this.props.jumpTo(nextRoute.key);\n        this.props.onAnimationEnd && this.props.onAnimationEnd();\n      } else {\n        global.requestAnimationFrame(() => {\n          this._scrollTo(this.props.navigationState.index * this.props.layout.width);\n        });\n      }\n    };\n\n    this._handleScroll = e => {\n      if (this._isInitial || e.nativeEvent.contentSize.width === 0) {\n        return;\n      }\n\n      var {\n        navigationState,\n        layout\n      } = this.props;\n      var offset = navigationState.index * layout.width;\n      this.props.offsetX.setValue(-offset);\n      this.props.panX.setValue(offset - e.nativeEvent.contentOffset.x);\n      global.cancelAnimationFrame(this._idleCallback);\n      this._isIdle = false;\n      this._idleCallback = global.requestAnimationFrame(() => {\n        this._isIdle = true;\n      });\n    };\n\n    var {\n      navigationState: _navigationState,\n      layout: _layout\n    } = this.props;\n    this.state = {\n      initialOffset: {\n        x: _navigationState.index * _layout.width,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._setInitialPage();\n  }\n\n  componentDidUpdate(prevProps) {\n    var amount = this.props.navigationState.index * this.props.layout.width;\n\n    if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n      this._scrollTo(amount, false);\n    } else if (prevProps.navigationState.index !== this.props.navigationState.index) {\n      this._scrollTo(amount);\n    }\n  }\n\n  render() {\n    var {\n      children,\n      layout,\n      navigationState,\n      onSwipeStart,\n      onSwipeEnd,\n      bounces\n    } = this.props;\n    return React.createElement(ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      directionalLockEnabled: true,\n      keyboardDismissMode: \"on-drag\",\n      keyboardShouldPersistTaps: \"always\",\n      overScrollMode: \"never\",\n      scrollToOverflowEnabled: true,\n      scrollEnabled: this.props.swipeEnabled,\n      automaticallyAdjustContentInsets: false,\n      bounces: bounces,\n      alwaysBounceHorizontal: bounces,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 1,\n      onScroll: this._handleScroll,\n      onScrollBeginDrag: onSwipeStart,\n      onScrollEndDrag: onSwipeEnd,\n      onMomentumScrollEnd: this._handleMomentumScrollEnd,\n      contentOffset: this.state.initialOffset,\n      style: styles.container,\n      contentContainerStyle: layout.width ? null : styles.container,\n      ref: el => this._scrollView = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      }\n    }, React.Children.map(children, (child, i) => {\n      var route = navigationState.routes[i];\n      var focused = i === navigationState.index;\n      return React.createElement(View, {\n        key: route.key,\n        testID: this.props.getTestID({\n          route\n        }),\n        accessibilityElementsHidden: !focused,\n        importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n        style: layout.width ? {\n          width: layout.width,\n          overflow: 'hidden'\n        } : focused ? styles.page : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        }\n      }, focused || layout.width ? child : null);\n    }));\n  }\n\n}\nPagerScroll.propTypes = _objectSpread({}, PagerRendererPropType, {\n  bounces: PropTypes.bool.isRequired\n});\nPagerScroll.defaultProps = {\n  canJumpToTab: () => true,\n  bounces: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  page: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/react-native-tab-view/src/PagerScroll.js"],"names":["React","PropTypes","PagerRendererPropType","PagerScroll","Component","constructor","props","_isIdle","_isInitial","_setInitialPage","layout","width","_scrollTo","navigationState","index","setTimeout","x","animated","_scrollView","scrollTo","animationEnabled","_handleMomentumScrollEnd","e","nextIndex","Math","round","nativeEvent","contentOffset","nextRoute","routes","canJumpToTab","route","jumpTo","key","onAnimationEnd","global","requestAnimationFrame","_handleScroll","contentSize","offset","offsetX","setValue","panX","cancelAnimationFrame","_idleCallback","state","initialOffset","y","componentDidMount","componentDidUpdate","prevProps","amount","length","render","children","onSwipeStart","onSwipeEnd","bounces","swipeEnabled","styles","container","el","Children","map","child","i","focused","getTestID","overflow","page","propTypes","bool","isRequired","defaultProps","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { PagerRendererPropType } from './PropTypes';\nimport type { PagerRendererProps } from './TypeDefinitions';\n\ntype ScrollEvent = {\n  nativeEvent: {\n    contentOffset: {\n      x: number,\n      y: number,\n    },\n    contentSize: {\n      height: number,\n      width: number,\n    },\n  },\n};\n\ntype State = {|\n  initialOffset: {| x: number, y: number |},\n|};\n\ntype Props<T> = PagerRendererProps<T> & {\n  bounces: boolean,\n};\n\nexport default class PagerScroll<T: *> extends React.Component<\n  Props<T>,\n  State\n> {\n  static propTypes = {\n    ...PagerRendererPropType,\n    bounces: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    bounces: false,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState, layout } = this.props;\n\n    this.state = {\n      initialOffset: {\n        x: navigationState.index * layout.width,\n        y: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this._setInitialPage();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const amount = this.props.navigationState.index * this.props.layout.width;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._scrollTo(amount, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this._scrollTo(amount);\n    }\n  }\n\n  _scrollView: ?ScrollView;\n  _idleCallback: any;\n  _isIdle: boolean = true;\n  _isInitial: boolean = true;\n\n  _setInitialPage = () => {\n    if (this.props.layout.width) {\n      this._isInitial = true;\n      this._scrollTo(\n        this.props.navigationState.index * this.props.layout.width,\n        false\n      );\n    }\n\n    setTimeout(() => {\n      this._isInitial = false;\n    }, 50);\n  };\n\n  _scrollTo = (x: number, animated = true) => {\n    if (this._isIdle && this._scrollView) {\n      this._scrollView.scrollTo({\n        x,\n        animated: animated && this.props.animationEnabled !== false,\n      });\n    }\n  };\n\n  _handleMomentumScrollEnd = (e: ScrollEvent) => {\n    let nextIndex = Math.round(\n      e.nativeEvent.contentOffset.x / this.props.layout.width\n    );\n\n    const nextRoute = this.props.navigationState.routes[nextIndex];\n\n    if (this.props.canJumpToTab({ route: nextRoute })) {\n      this.props.jumpTo(nextRoute.key);\n      this.props.onAnimationEnd && this.props.onAnimationEnd();\n    } else {\n      global.requestAnimationFrame(() => {\n        this._scrollTo(\n          this.props.navigationState.index * this.props.layout.width\n        );\n      });\n    }\n  };\n\n  _handleScroll = (e: ScrollEvent) => {\n    if (this._isInitial || e.nativeEvent.contentSize.width === 0) {\n      return;\n    }\n\n    const { navigationState, layout } = this.props;\n    const offset = navigationState.index * layout.width;\n\n    this.props.offsetX.setValue(-offset);\n    this.props.panX.setValue(offset - e.nativeEvent.contentOffset.x);\n\n    global.cancelAnimationFrame(this._idleCallback);\n\n    this._isIdle = false;\n    this._idleCallback = global.requestAnimationFrame(() => {\n      this._isIdle = true;\n    });\n  };\n\n  render() {\n    const {\n      children,\n      layout,\n      navigationState,\n      onSwipeStart,\n      onSwipeEnd,\n      bounces,\n    } = this.props;\n\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        directionalLockEnabled\n        keyboardDismissMode=\"on-drag\"\n        keyboardShouldPersistTaps=\"always\"\n        overScrollMode=\"never\"\n        scrollToOverflowEnabled\n        scrollEnabled={this.props.swipeEnabled}\n        automaticallyAdjustContentInsets={false}\n        bounces={bounces}\n        alwaysBounceHorizontal={bounces}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEventThrottle={1}\n        onScroll={this._handleScroll}\n        onScrollBeginDrag={onSwipeStart}\n        onScrollEndDrag={onSwipeEnd}\n        onMomentumScrollEnd={this._handleMomentumScrollEnd}\n        contentOffset={this.state.initialOffset}\n        style={styles.container}\n        contentContainerStyle={layout.width ? null : styles.container}\n        ref={el => (this._scrollView = el)}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = navigationState.routes[i];\n          const focused = i === navigationState.index;\n\n          return (\n            <View\n              key={route.key}\n              testID={this.props.getTestID({ route })}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              style={\n                layout.width\n                  ? { width: layout.width, overflow: 'hidden' }\n                  : focused\n                    ? styles.page\n                    : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  page: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}