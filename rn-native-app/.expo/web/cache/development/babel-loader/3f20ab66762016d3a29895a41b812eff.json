{"ast":null,"code":"var _jsxFileName = \"/Users/srijan/react-native-internal-training/rn-native-app/node_modules/@react-navigation/native/dist/createNavigationAwareScrollable.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\nexport default function createNavigationAwareScrollable(Component) {\n  var _class, _temp;\n\n  var ComponentWithNavigationScrolling = withNavigation((_temp = _class = class extends React.PureComponent {\n    componentDidMount() {\n      this._subscription = this.props.navigation.addListener('refocus', () => {\n        var scrollableNode = this.getNode();\n\n        if (this.props.navigation.isFocused() && scrollableNode !== null) {\n          if (scrollableNode.scrollToTop != null) {\n            scrollableNode.scrollToTop();\n          } else if (scrollableNode.scrollTo != null) {\n            scrollableNode.scrollTo({\n              y: 0\n            });\n          } else if (scrollableNode.scrollResponderScrollTo != null) {\n            scrollableNode.scrollResponderScrollTo({\n              y: 0\n            });\n          }\n        }\n      });\n    }\n\n    getNode() {\n      if (this._scrollRef === null) {\n        return null;\n      }\n\n      if (this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      } else if (this._scrollRef.getNode) {\n        return this._scrollRef.getNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n\n    componentWillUnmount() {\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n\n    render() {\n      return React.createElement(Component, _extends({\n        ref: view => {\n          this._scrollRef = view;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }));\n    }\n\n  }, _class.displayName = \"withNavigationScrolling(\".concat(Component.displayName || Component.name, \")\"), _temp));\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    constructor() {\n      var _this;\n\n      super(...arguments);\n      _this = this;\n\n      this._captureRef = view => {\n        this._innerRef = view;\n        this.props.onRef && this.props.onRef(view);\n      };\n\n      this.setNativeProps = function () {\n        return _this._innerRef.getNode().setNativeProps(...arguments);\n      };\n\n      this.getScrollResponder = function () {\n        return _this._innerRef.getNode().getScrollResponder(...arguments);\n      };\n\n      this.getScrollableNode = function () {\n        return _this._innerRef.getNode().getScrollableNode(...arguments);\n      };\n\n      this.getInnerViewNode = function () {\n        return _this._innerRef.getNode().getInnerViewNode(...arguments);\n      };\n\n      this.scrollTo = function () {\n        return _this._innerRef.getNode().scrollTo(...arguments);\n      };\n\n      this.scrollToEnd = function () {\n        return _this._innerRef.getNode().scrollToEnd(...arguments);\n      };\n\n      this.scrollWithoutAnimationTo = function () {\n        return _this._innerRef.getNode().scrollWithoutAnimationTo(...arguments);\n      };\n\n      this.flashScrollIndicators = function () {\n        return _this._innerRef.getNode().flashScrollIndicators(...arguments);\n      };\n    }\n\n    render() {\n      return React.createElement(ComponentWithNavigationScrolling, _extends({}, this.props, {\n        onRef: this._captureRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }));\n    }\n\n  }\n\n  NavigationAwareScrollable.displayName = \"NavigationAwareScrollable(\".concat(Component.displayName || Component.name, \")\");\n  return hoistStatics(NavigationAwareScrollable, Component);\n}","map":{"version":3,"sources":["/Users/srijan/react-native-internal-training/rn-native-app/node_modules/@react-navigation/native/dist/createNavigationAwareScrollable.js"],"names":["React","hoistStatics","withNavigation","createNavigationAwareScrollable","Component","ComponentWithNavigationScrolling","PureComponent","componentDidMount","_subscription","props","navigation","addListener","scrollableNode","getNode","isFocused","scrollToTop","scrollTo","y","scrollResponderScrollTo","_scrollRef","getScrollResponder","componentWillUnmount","remove","render","view","displayName","name","NavigationAwareScrollable","_captureRef","_innerRef","onRef","setNativeProps","getScrollableNode","getInnerViewNode","scrollToEnd","scrollWithoutAnimationTo","flashScrollIndicators"],"mappings":"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","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\n\nexport default function createNavigationAwareScrollable(Component) {\n  const ComponentWithNavigationScrolling = withNavigation(class extends React.PureComponent {\n    static displayName = `withNavigationScrolling(${Component.displayName || Component.name})`;\n\n    componentDidMount() {\n      this._subscription = this.props.navigation.addListener('refocus', () => {\n        const scrollableNode = this.getNode();\n        if (this.props.navigation.isFocused() && scrollableNode !== null) {\n          if (scrollableNode.scrollToTop != null) {\n            scrollableNode.scrollToTop();\n          } else if (scrollableNode.scrollTo != null) {\n            scrollableNode.scrollTo({ y: 0 });\n          } else if (scrollableNode.scrollResponderScrollTo != null) {\n            scrollableNode.scrollResponderScrollTo({ y: 0 });\n          }\n        }\n      });\n    }\n\n    getNode() {\n      if (this._scrollRef === null) {\n        return null;\n      }\n\n      if (this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      } else if (this._scrollRef.getNode) {\n        return this._scrollRef.getNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n\n    componentWillUnmount() {\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n\n    render() {\n      return <Component ref={view => {\n        this._scrollRef = view;\n      }} {...this.props} />;\n    }\n  });\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    static displayName = `NavigationAwareScrollable(${Component.displayName || Component.name})`;\n\n    _captureRef = view => {\n      this._innerRef = view;\n      this.props.onRef && this.props.onRef(view);\n    };\n\n    setNativeProps = (...args) => {\n      return this._innerRef.getNode().setNativeProps(...args);\n    };\n\n    getScrollResponder = (...args) => {\n      return this._innerRef.getNode().getScrollResponder(...args);\n    };\n\n    getScrollableNode = (...args) => {\n      return this._innerRef.getNode().getScrollableNode(...args);\n    };\n\n    getInnerViewNode = (...args) => {\n      return this._innerRef.getNode().getInnerViewNode(...args);\n    };\n\n    scrollTo = (...args) => {\n      return this._innerRef.getNode().scrollTo(...args);\n    };\n\n    scrollToEnd = (...args) => {\n      return this._innerRef.getNode().scrollToEnd(...args);\n    };\n\n    scrollWithoutAnimationTo = (...args) => {\n      return this._innerRef.getNode().scrollWithoutAnimationTo(...args);\n    };\n\n    flashScrollIndicators = (...args) => {\n      return this._innerRef.getNode().flashScrollIndicators(...args);\n    };\n\n    render() {\n      return <ComponentWithNavigationScrolling {...this.props} onRef={this._captureRef} />;\n    }\n  }\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}"]},"metadata":{},"sourceType":"module"}