{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/Header/Header.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport MaskedViewIOS from \"react-native-web/dist/exports/MaskedViewIOS\";\nimport { withOrientation, SafeAreaView } from '@react-navigation/native';\nimport HeaderTitle from \"./HeaderTitle\";\nimport HeaderBackButton from \"./HeaderBackButton\";\nimport ModularHeaderBackButton from \"./ModularHeaderBackButton\";\nimport HeaderStyleInterpolator from \"./HeaderStyleInterpolator\";\nvar APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64\n});\nvar STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0\n});\nvar TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56\n});\nvar TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64\n});\n\nvar getTitleOffsets = function getTitleOffsets(layoutPreset, hasLeftComponent, hasRightComponent) {\n  if (layoutPreset === 'left') {\n    var style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    var _style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN\n    };\n\n    if (!hasLeftComponent && !hasRightComponent) {\n      _style.left = 0;\n      _style.right = 0;\n    }\n\n    return _style;\n  }\n\n  return undefined;\n};\n\nvar getAppBarHeight = function getAppBarHeight(isLandscape) {\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nvar Header = function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      widths: {}\n    };\n\n    _this.renderTitleComponent = function (props) {\n      var layoutPreset = _this.props.layoutPreset;\n      var options = props.scene.descriptor.options;\n      var headerTitle = options.headerTitle;\n\n      if (React.isValidElement(headerTitle)) {\n        return headerTitle;\n      }\n\n      var titleString = _this.getHeaderTitleString(props.scene);\n\n      var titleStyle = options.headerTitleStyle;\n      var color = options.headerTintColor;\n      var allowFontScaling = options.headerTitleAllowFontScaling;\n      var onLayout = layoutPreset === 'center' ? function (e) {\n        var width = e.nativeEvent.layout.width;\n\n        _this.setState(function (state) {\n          return {\n            widths: _objectSpread({}, state.widths, _defineProperty({}, props.scene.key, width))\n          };\n        });\n      } : undefined;\n      var HeaderTitleComponent = headerTitle && typeof headerTitle !== 'string' ? headerTitle : HeaderTitle;\n      return React.createElement(HeaderTitleComponent, {\n        onLayout: onLayout,\n        allowFontScaling: !!allowFontScaling,\n        style: [color ? {\n          color: color\n        } : null, layoutPreset === 'center' ? {\n          textAlign: 'center'\n        } : {\n          textAlign: 'left'\n        }, titleStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      }, titleString);\n    };\n\n    _this.renderLeftComponent = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (React.isValidElement(options.headerLeft) || options.headerLeft === null) {\n        return options.headerLeft;\n      }\n\n      if (!options.headerLeft && props.scene.index === 0) {\n        return;\n      }\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n      var RenderedLeftComponent = options.headerLeft || HeaderBackButton;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(RenderedLeftComponent, {\n        onPress: goBack,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        backTitleVisible: _this.props.backTitleVisible,\n        allowFontScaling: options.headerBackAllowFontScaling,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      });\n    };\n\n    _this.renderModularLeftComponent = function (props, ButtonContainerComponent, LabelContainerComponent) {\n      var _props$scene$descript = props.scene.descriptor,\n          options = _props$scene$descript.options,\n          navigation = _props$scene$descript.navigation;\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(ModularHeaderBackButton, {\n        onPress: goBack,\n        ButtonContainerComponent: ButtonContainerComponent,\n        LabelContainerComponent: LabelContainerComponent,\n        backTitleVisible: _this.props.backTitleVisible,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        }\n      });\n    };\n\n    _this.renderRightComponent = function (props) {\n      var headerRight = props.scene.descriptor.options.headerRight;\n      return headerRight || null;\n    };\n\n    _this.renderLeft = function (props) {\n      var options = props.scene.descriptor.options;\n      var transitionPreset = _this.props.transitionPreset;\n      var style = props.style;\n\n      if (options.headerLeftContainerStyle) {\n        style = [style, options.headerLeftContainerStyle];\n      }\n\n      if (transitionPreset !== 'uikit' || options.headerBackImage || options.headerLeft || options.headerLeft === null) {\n        return _this.renderSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderLeftComponent, _this.props.leftInterpolator);\n      } else {\n        return _this.renderModularSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderModularLeftComponent, _this.props.leftLabelInterpolator, _this.props.leftButtonInterpolator);\n      }\n    };\n\n    _this.renderTitle = function (props, options) {\n      var _this$props = _this.props,\n          layoutPreset = _this$props.layoutPreset,\n          transitionPreset = _this$props.transitionPreset;\n      var style = [{\n        justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start'\n      }, getTitleOffsets(layoutPreset, options.hasLeftComponent, options.hasRightComponent), options.headerTitleContainerStyle];\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'title', _this.renderTitleComponent, transitionPreset === 'uikit' ? _this.props.titleFromLeftInterpolator : _this.props.titleInterpolator);\n    };\n\n    _this.renderRight = function (props) {\n      var options = props.scene.descriptor.options;\n      var style = props.style;\n\n      if (options.headerRightContainerStyle) {\n        style = [style, options.headerRightContainerStyle];\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'right', _this.renderRightComponent, _this.props.rightInterpolator);\n    };\n\n    _this.renderBackground = function (props) {\n      var _props$scene = props.scene,\n          index = _props$scene.index,\n          options = _props$scene.descriptor.options;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: StyleSheet.absoluteFill\n      }), 'background', function () {\n        return options.headerBackground;\n      }, _this.props.backgroundInterpolator);\n    };\n\n    _this.renderModularSubView = function (props, name, renderer, labelStyleInterpolator, buttonStyleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n\n      if (index === 0) {\n        return;\n      }\n\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var ButtonContainer = function ButtonContainer(_ref) {\n        var children = _ref.children;\n        return React.createElement(Animated.View, {\n          style: [buttonStyleInterpolator(_objectSpread({}, _this.props, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          }\n        }, children);\n      };\n\n      var LabelContainer = function LabelContainer(_ref2) {\n        var children = _ref2.children;\n        return React.createElement(Animated.View, {\n          style: [labelStyleInterpolator(_objectSpread({}, _this.props, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          }\n        }, children);\n      };\n\n      var subView = renderer(props, ButtonContainer, LabelContainer);\n\n      if (subView === null) {\n        return subView;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(View, {\n        key: name + \"_\" + key,\n        pointerEvents: pointerEvents,\n        style: [styles.item, styles[name], props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        }\n      }, subView);\n    };\n\n    _this.renderSubView = function (props, name, renderer, styleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var subView = renderer(props);\n\n      if (subView == null) {\n        return null;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(Animated.View, {\n        pointerEvents: pointerEvents,\n        key: name + \"_\" + key,\n        style: [styles.item, styles[name], props.style, styleInterpolator(_objectSpread({}, _this.props, props))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        }\n      }, subView);\n    };\n\n    _this.renderHeader = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (options.header === null) {\n        return null;\n      }\n\n      var left = _this.renderLeft(props);\n\n      var right = _this.renderRight(props);\n\n      var title = _this.renderTitle(props, {\n        hasLeftComponent: !!left,\n        hasRightComponent: !!right,\n        headerTitleContainerStyle: options.headerTitleContainerStyle\n      });\n\n      var transitionPreset = _this.props.transitionPreset;\n      var wrapperProps = {\n        style: styles.header,\n        key: \"scene_\" + props.scene.key\n      };\n\n      if (options.headerLeft || options.headerBackImage || Platform.OS !== 'ios' || transitionPreset !== 'uikit') {\n        return React.createElement(View, _extends({}, wrapperProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          }\n        }), title, left, right);\n      } else {\n        return React.createElement(MaskedViewIOS, _extends({}, wrapperProps, {\n          maskElement: React.createElement(View, {\n            style: styles.iconMaskContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 584\n            }\n          }, React.createElement(Image, {\n            source: require(\"../assets/back-icon-mask.png\"),\n            style: styles.iconMask,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 585\n            }\n          }), React.createElement(View, {\n            style: styles.iconMaskFillerRect,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 589\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          }\n        }), title, left, right);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getHeaderTitleString\",\n    value: function getHeaderTitleString(scene) {\n      var options = scene.descriptor.options;\n\n      if (typeof options.headerTitle === 'string') {\n        return options.headerTitle;\n      }\n\n      if (options.title && typeof options.title !== 'string' && __DEV__) {\n        throw new Error(\"Invalid title for route \\\"\" + scene.route.routeName + \"\\\" - title must be string or null, instead it was of type \" + typeof options.title);\n      }\n\n      return options.title;\n    }\n  }, {\n    key: \"getLastScene\",\n    value: function getLastScene(scene) {\n      return this.props.scenes.find(function (s) {\n        return s.index === scene.index - 1;\n      });\n    }\n  }, {\n    key: \"getBackButtonTitleString\",\n    value: function getBackButtonTitleString(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      var headerBackTitle = lastScene.descriptor.options.headerBackTitle;\n\n      if (headerBackTitle || headerBackTitle === null) {\n        return headerBackTitle;\n      }\n\n      return this.getHeaderTitleString(lastScene);\n    }\n  }, {\n    key: \"getTruncatedBackButtonTitle\",\n    value: function getTruncatedBackButtonTitle(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      return lastScene.descriptor.options.headerTruncatedBackTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var appBar;\n      var background;\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          scene = _this$props2.scene,\n          isLandscape = _this$props2.isLandscape;\n\n      if (mode === 'float') {\n        var scenesByIndex = {};\n        this.props.scenes.forEach(function (scene) {\n          scenesByIndex[scene.index] = scene;\n        });\n        var scenesProps = Object.values(scenesByIndex).map(function (scene) {\n          return {\n            position: _this2.props.position,\n            scene: scene\n          };\n        });\n        appBar = scenesProps.map(function (props) {\n          return _this2.renderHeader(props);\n        });\n        background = scenesProps.map(function (props) {\n          return _this2.renderBackground(props);\n        });\n      } else {\n        var headerProps = {\n          position: new Animated.Value(this.props.scene.index),\n          scene: this.props.scene\n        };\n        appBar = this.renderHeader(headerProps);\n        background = this.renderBackground(headerProps);\n      }\n\n      var options = scene.descriptor.options;\n      var _options$headerStyle = options.headerStyle,\n          headerStyle = _options$headerStyle === void 0 ? {} : _options$headerStyle;\n      var headerStyleObj = StyleSheet.flatten(headerStyle);\n      var appBarHeight = getAppBarHeight(isLandscape);\n\n      var alignItems = headerStyleObj.alignItems,\n          justifyContent = headerStyleObj.justifyContent,\n          flex = headerStyleObj.flex,\n          flexDirection = headerStyleObj.flexDirection,\n          flexGrow = headerStyleObj.flexGrow,\n          flexShrink = headerStyleObj.flexShrink,\n          flexBasis = headerStyleObj.flexBasis,\n          flexWrap = headerStyleObj.flexWrap,\n          position = headerStyleObj.position,\n          padding = headerStyleObj.padding,\n          paddingHorizontal = headerStyleObj.paddingHorizontal,\n          paddingRight = headerStyleObj.paddingRight,\n          paddingLeft = headerStyleObj.paddingLeft,\n          top = headerStyleObj.top,\n          right = headerStyleObj.right,\n          bottom = headerStyleObj.bottom,\n          left = headerStyleObj.left,\n          safeHeaderStyle = _objectWithoutProperties(headerStyleObj, [\"alignItems\", \"justifyContent\", \"flex\", \"flexDirection\", \"flexGrow\", \"flexShrink\", \"flexBasis\", \"flexWrap\", \"position\", \"padding\", \"paddingHorizontal\", \"paddingRight\", \"paddingLeft\", \"top\", \"right\", \"bottom\", \"left\"]);\n\n      if (__DEV__) {\n        warnIfHeaderStyleDefined(alignItems, 'alignItems');\n        warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n        warnIfHeaderStyleDefined(flex, 'flex');\n        warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n        warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n        warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n        warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n        warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n        warnIfHeaderStyleDefined(padding, 'padding');\n        warnIfHeaderStyleDefined(position, 'position');\n        warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n        warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n        warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n        warnIfHeaderStyleDefined(top, 'top');\n        warnIfHeaderStyleDefined(right, 'right');\n        warnIfHeaderStyleDefined(bottom, 'bottom');\n        warnIfHeaderStyleDefined(left, 'left');\n      }\n\n      var containerStyles = [options.headerTransparent ? styles.transparentContainer : styles.container, {\n        height: appBarHeight\n      }, safeHeaderStyle];\n      var headerForceInset = options.headerForceInset;\n      var forceInset = headerForceInset || {\n        top: 'always',\n        bottom: 'never',\n        horizontal: 'always'\n      };\n      return React.createElement(Animated.View, {\n        style: [this.props.layoutInterpolator(this.props), Platform.OS === 'ios' && !options.headerTransparent ? {\n          backgroundColor: safeHeaderStyle.backgroundColor || DEFAULT_BACKGROUND_COLOR\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: forceInset,\n        style: containerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        }\n      }, background, React.createElement(View, {\n        style: styles.flexOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        }\n      }, appBar)));\n    }\n  }], [{\n    key: \"HEIGHT\",\n    get: function get() {\n      return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent);\n\nHeader.defaultProps = {\n  layoutInterpolator: HeaderStyleInterpolator.forLayout,\n  leftInterpolator: HeaderStyleInterpolator.forLeft,\n  leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n  leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n  titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n  titleInterpolator: HeaderStyleInterpolator.forCenter,\n  rightInterpolator: HeaderStyleInterpolator.forRight,\n  backgroundInterpolator: HeaderStyleInterpolator.forBackground\n};\n\nfunction warnIfHeaderStyleDefined(value, styleProp) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\");\n  } else if (value !== undefined) {\n    console.warn(styleProp + \" was given a value of \" + value + \", this has no effect on headerStyle.\");\n  }\n}\n\nvar platformContainerStyles = Platform.select({\n  android: {\n    elevation: 4\n  },\n  ios: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#A7A7AA'\n  },\n  default: {\n    boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)\"\n  }\n});\nvar DEFAULT_BACKGROUND_COLOR = '#FFF';\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    backgroundColor: DEFAULT_BACKGROUND_COLOR\n  }, platformContainerStyles),\n  transparentContainer: _objectSpread({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }, platformContainerStyles, {\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0\n  }),\n  header: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    flexDirection: 'row'\n  }),\n  item: {\n    backgroundColor: 'transparent'\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5\n  },\n  iconMask: {\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  background: {},\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  flexOne: {\n    flex: 1\n  }\n});\nexport default withOrientation(Header);","map":{"version":3,"sources":["Header.tsx"],"names":["APPBAR_HEIGHT","Platform","ios","android","default","STATUSBAR_HEIGHT","TITLE_OFFSET_CENTER_ALIGN","TITLE_OFFSET_LEFT_ALIGN","getTitleOffsets","layoutPreset","style","left","right","getAppBarHeight","isLandscape","Header","React","PureComponent","defaultProps","layoutInterpolator","HeaderStyleInterpolator","leftInterpolator","leftButtonInterpolator","leftLabelInterpolator","titleFromLeftInterpolator","titleInterpolator","rightInterpolator","backgroundInterpolator","state","widths","scene","options","s","lastScene","headerBackTitle","renderTitleComponent","props","headerTitle","titleString","titleStyle","color","allowFontScaling","onLayout","width","e","HeaderTitleComponent","textAlign","renderLeftComponent","backButtonTitle","truncatedBackButtonTitle","RenderedLeftComponent","goBack","requestAnimationFrame","renderModularLeftComponent","navigation","renderRightComponent","headerRight","renderLeft","transitionPreset","renderTitle","justifyContent","renderRight","renderBackground","index","offset","Math","StyleSheet","renderModularSubView","isStale","key","ButtonContainer","children","buttonStyleInterpolator","LabelContainer","labelStyleInterpolator","subView","renderer","pointerEvents","name","styles","renderSubView","styleInterpolator","renderHeader","title","hasLeftComponent","hasRightComponent","headerTitleContainerStyle","wrapperProps","require","mode","scenesByIndex","scenesProps","Object","position","appBar","background","headerProps","Animated","headerStyle","headerStyleObj","appBarHeight","alignItems","flex","flexDirection","flexGrow","flexShrink","flexBasis","flexWrap","padding","paddingHorizontal","paddingRight","paddingLeft","top","bottom","safeHeaderStyle","warnIfHeaderStyleDefined","containerStyles","height","headerForceInset","forceInset","horizontal","backgroundColor","styleProp","value","console","platformContainerStyles","elevation","borderBottomWidth","borderBottomColor","boxShadow","DEFAULT_BACKGROUND_COLOR","container","transparentContainer","header","item","iconMaskContainer","iconMaskFillerRect","marginLeft","iconMask","marginTop","alignSelf","resizeMode","transform","scaleX","I18nManager","flexOne","withOrientation"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;;;;;AAeA,SAAA,eAAA,EAAA,YAAA,QAAA,0BAAA;AAEA,OAAA,WAAA;AACA,OAAA,gBAAA;AACA,OAAA,uBAAA;AACA,OAAA,uBAAA;AA2BA,IAAMA,aAAa,GAAGC,QAAQ,CAARA,MAAAA,CAAgB;AACpCC,EAAAA,GAAG,EADiC,EAAA;AAEpCC,EAAAA,OAAO,EAF6B,EAAA;AAGpCC,EAAAA,OAAO,EAHT;AAAsC,CAAhBH,CAAtB;AAKA,IAAMI,gBAAgB,GAAGJ,QAAQ,CAARA,MAAAA,CAAgB;AACvCC,EAAAA,GAAG,EADoC,EAAA;AAEvCE,EAAAA,OAAO,EAFT;AAAyC,CAAhBH,CAAzB;AAMA,IAAMK,yBAAyB,GAAGL,QAAQ,CAARA,MAAAA,CAAgB;AAChDC,EAAAA,GAAG,EAD6C,EAAA;AAEhDE,EAAAA,OAAO,EAFT;AAAkD,CAAhBH,CAAlC;AAKA,IAAMM,uBAAuB,GAAGN,QAAQ,CAARA,MAAAA,CAAgB;AAC9CC,EAAAA,GAAG,EAD2C,EAAA;AAE9CC,EAAAA,OAAO,EAFuC,EAAA;AAG9CC,EAAAA,OAAO,EAHT;AAAgD,CAAhBH,CAAhC;;AAMA,IAAMO,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,YAAlBA,EAAkB,gBAAlBA,EAAkB,iBAAlBA,EAIsB;AAC1B,MAAIC,YAAY,KAAhB,MAAA,EAA6B;AAI3B,QAAIC,KAAK,GAAG;AACVC,MAAAA,IAAI,EADM,uBAAA;AAEVC,MAAAA,KAAK,EAFP;AAAY,KAAZ;;AAKA,QAAI,CAAJ,gBAAA,EAAuB;AACrBF,MAAAA,KAAK,CAALA,IAAAA,GAAaT,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,EAAAA,GAAbS,CAAAA;AAEF;;AAAA,QAAI,CAAJ,iBAAA,EAAwB;AACtBA,MAAAA,KAAK,CAALA,KAAAA,GAAAA,CAAAA;AAGF;;AAAA,WAAA,KAAA;AAhBF,GAAA,MAiBO,IAAID,YAAY,KAAhB,QAAA,EAA+B;AACpC,QAAIC,MAAK,GAAG;AACVC,MAAAA,IAAI,EADM,yBAAA;AAEVC,MAAAA,KAAK,EAFP;AAAY,KAAZ;;AAIA,QAAI,CAAA,gBAAA,IAAqB,CAAzB,iBAAA,EAA6C;AAC3CF,MAAAA,MAAK,CAALA,IAAAA,GAAAA,CAAAA;AACAA,MAAAA,MAAK,CAALA,KAAAA,GAAAA,CAAAA;AAGF;;AAAA,WAAA,MAAA;AAGF;;AAAA,SAAA,SAAA;AAnCF,CAAA;;AAsCA,IAAMG,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,WAAlBA,EAA4C;AAChD,MAAIZ,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AAEzB,QAAIa,WAAW,IAAI,CAACb,QAAQ,CAA5B,KAAA,EAAoC;AAClC,aAAA,EAAA;AADF,KAAA,MAEO;AACL,aAAA,EAAA;AAEH;AAPD,GAAA,MAOO,IAAIA,QAAQ,CAARA,EAAAA,KAAJ,SAAA,EAA+B;AACpC,WAAA,EAAA;AADK,GAAA,MAEA;AACL,WAAA,EAAA;AAEH;AAbD,CAAA;;AAeMc,IAAAA,M;;;;;;;;;;;;;;;UAgBJa,K,GAAe;AACbC,MAAAA,MAAM,EADO;AAAA,K;;UA6CPM,oB,GAAuB,UAAA,KAAA,EAAyB;AAAA,UAC9C1B,YAD8C,GAC7B,KAAA,CAD6B,KAC7B,CAD6B,YAAA;AAAA,UAE9CsB,OAF8C,GAElCK,KAAK,CAALA,KAAAA,CAFkC,UAElCA,CAFkC,OAAA;AAGtD,UAAMC,WAAW,GAAGN,OAAO,CAA3B,WAAA;;AACA,UAAIf,KAAK,CAALA,cAAAA,CAAJ,WAAIA,CAAJ,EAAuC;AACrC,eAAA,WAAA;AAEF;;AAAA,UAAMsB,WAAW,GAAG,KAAA,CAAA,oBAAA,CAA0BF,KAAK,CAAnD,KAAoB,CAApB;;AAEA,UAAMG,UAAU,GAAGR,OAAO,CAA1B,gBAAA;AACA,UAAMS,KAAK,GAAGT,OAAO,CAArB,eAAA;AACA,UAAMU,gBAAgB,GAAGV,OAAO,CAAhC,2BAAA;AAIA,UAAMW,QAAQ,GACZjC,YAAY,KAAZA,QAAAA,GACI,UAAA,CAAA,EAA0B;AAAA,YAChBkC,KADgB,GACNC,CAAC,CAADA,WAAAA,CADM,MACNA,CADM,KAAA;;AAGxB,QAAA,KAAA,CAAA,QAAA,CAAc,UAAA,KAAA,EAAK;AAAA,iBAAK;AACtBf,YAAAA,MAAM,EAAA,aAAA,CAAA,EAAA,EACDD,KAAK,CADJ,MAAA,EAAA,eAAA,CAAA,EAAA,EAEHQ,KAAK,CAALA,KAAAA,CAFG,GAAA,EADW,KACX,CAAA;AADgB,WAAL;AAAnB,SAAA;AAJN3B,OAAAA,GADF,SAAA;AAcA,UAAMoC,oBAAoB,GACxBR,WAAW,IAAI,OAAA,WAAA,KAAfA,QAAAA,GAAAA,WAAAA,GADF,WAAA;AAIA,aACE,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAA;AACE,QAAA,QAAQ,EADV,QAAA;AAEE,QAAA,gBAAgB,EAAE,CAAC,CAFrB,gBAAA;AAGE,QAAA,KAAK,EAAE,CACLG,KAAK,GAAG;AAAEA,UAAAA,KAAK,EAAV;AAAG,SAAH,GADA,IAAA,EAEL/B,YAAY,KAAZA,QAAAA,GAEI;AAAEqC,UAAAA,SAAS,EAFfrC;AAEI,SAFJA,GAII;AAAEqC,UAAAA,SAAS,EANV;AAMD,SANC,EAHT,UAGS,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,WACE,CADF;;;UAmBMC,mB,GAAsB,UAAA,KAAA,EAAyB;AAAA,UAC7ChB,OAD6C,GACjCK,KAAK,CAALA,KAAAA,CADiC,UACjCA,CADiC,OAAA;;AAErD,UACEpB,KAAK,CAALA,cAAAA,CAAqBe,OAAO,CAA5Bf,UAAAA,KACAe,OAAO,CAAPA,UAAAA,KAFF,IAAA,EAGE;AACA,eAAOA,OAAO,CAAd,UAAA;AAGF;;AAAA,UAAI,CAACA,OAAO,CAAR,UAAA,IAAuBK,KAAK,CAALA,KAAAA,CAAAA,KAAAA,KAA3B,CAAA,EAAoD;AAClD;AAGF;;AAAA,UAAMY,eAAe,GAAG,KAAA,CAAA,wBAAA,CAA8BZ,KAAK,CAA3D,KAAwB,CAAxB;;AACA,UAAMa,wBAAwB,GAAG,KAAA,CAAA,2BAAA,CAC/Bb,KAAK,CADP,KAAiC,CAAjC;;AAGA,UAAMO,KAAK,GAAG,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkBP,KAAK,CAALA,KAAAA,CAAlB,GAAA,IACV,CAAC,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,GAA8B,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkBA,KAAK,CAALA,KAAAA,CAAjD,GAA+B,CAA/B,IADU,CAAA,GAAd,SAAA;AAGA,UAAMc,qBAAqB,GAAGnB,OAAO,CAAPA,UAAAA,IAA9B,gBAAA;;AACA,UAAMoB,MAAM,GAANA,SAAAA,MAAAA,GAAe;AAEnBC,QAAAA,qBAAqB,CAAC,YAAM;AAC1BhB,UAAAA,KAAK,CAALA,KAAAA,CAAAA,UAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAyCA,KAAK,CAALA,KAAAA,CAAAA,UAAAA,CAAzCA,GAAAA;AADFgB,SAAqB,CAArBA;AAFF,OAAA;;AAMA,aACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AACE,QAAA,OAAO,EADT,MAAA;AAEE,QAAA,iBAAiB,EAAErB,OAAO,CAF5B,uBAAA;AAGE,QAAA,SAAS,EAAEA,OAAO,CAHpB,eAAA;AAIE,QAAA,SAAS,EAAEA,OAAO,CAJpB,eAAA;AAKE,QAAA,KAAK,EALP,eAAA;AAME,QAAA,cAAc,EANhB,wBAAA;AAOE,QAAA,gBAAgB,EAAE,KAAA,CAAA,KAAA,CAPpB,gBAAA;AAQE,QAAA,gBAAgB,EAAEA,OAAO,CAR3B,0BAAA;AASE,QAAA,UAAU,EAAEA,OAAO,CATrB,oBAAA;AAUE,QAAA,YAAY,EAAE,KAAA,CAAA,KAAA,CAVhB,YAAA;AAWE,QAAA,KAAK,EAXP,KAAA;AAYE,QAAA,KAAK,EAAEK,KAAK,CAZd,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CADF;;;UAkBMiB,0B,GAA6B,UAAA,KAAA,EAAA,wBAAA,EAAA,uBAAA,EAQhC;AAAA,UAAA,qBAAA,GAC6BjB,KAAK,CAALA,KAAAA,CAD7B,UAAA;AAAA,UACKL,OADL,GAAA,qBAAA,CAAA,OAAA;AAAA,UACcuB,UADd,GAAA,qBAAA,CAAA,UAAA;;AAEH,UAAMN,eAAe,GAAG,KAAA,CAAA,wBAAA,CAA8BZ,KAAK,CAA3D,KAAwB,CAAxB;;AACA,UAAMa,wBAAwB,GAAG,KAAA,CAAA,2BAAA,CAC/Bb,KAAK,CADP,KAAiC,CAAjC;;AAGA,UAAMO,KAAK,GAAG,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkBP,KAAK,CAALA,KAAAA,CAAlB,GAAA,IACV,CAAC,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,GAA8B,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkBA,KAAK,CAALA,KAAAA,CAAjD,GAA+B,CAA/B,IADU,CAAA,GAAd,SAAA;;AAIA,UAAMe,MAAM,GAANA,SAAAA,MAAAA,GAAe;AAEnBC,QAAAA,qBAAqB,CAAC,YAAM;AAC1BE,UAAAA,UAAU,CAAVA,MAAAA,CAAkBlB,KAAK,CAALA,KAAAA,CAAAA,UAAAA,CAAlBkB,GAAAA;AADFF,SAAqB,CAArBA;AAFF,OAAA;;AAOA,aACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA;AACE,QAAA,OAAO,EADT,MAAA;AAEE,QAAA,wBAAwB,EAF1B,wBAAA;AAGE,QAAA,uBAAuB,EAHzB,uBAAA;AAIE,QAAA,gBAAgB,EAAE,KAAA,CAAA,KAAA,CAJpB,gBAAA;AAKE,QAAA,iBAAiB,EAAErB,OAAO,CAL5B,uBAAA;AAME,QAAA,SAAS,EAAEA,OAAO,CANpB,eAAA;AAOE,QAAA,SAAS,EAAEA,OAAO,CAPpB,eAAA;AAQE,QAAA,KAAK,EARP,eAAA;AASE,QAAA,cAAc,EAThB,wBAAA;AAUE,QAAA,UAAU,EAAEA,OAAO,CAVrB,oBAAA;AAWE,QAAA,YAAY,EAAE,KAAA,CAAA,KAAA,CAXhB,YAAA;AAYE,QAAA,KAAK,EAZP,KAAA;AAaE,QAAA,KAAK,EAAEK,KAAK,CAbd,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CADF;;;UAmBMmB,oB,GAAuB,UAAA,KAAA,EAAyB;AAAA,UAC9CC,WAD8C,GAC9BpB,KAAK,CAALA,KAAAA,CAAAA,UAAAA,CAD8B,OAC9BA,CAD8B,WAAA;AAEtD,aAAOoB,WAAW,IAAlB,IAAA;;;UAGMC,U,GAAa,UAAA,KAAA,EAAyB;AAAA,UACpC1B,OADoC,GACxBK,KAAK,CAALA,KAAAA,CADwB,UACxBA,CADwB,OAAA;AAAA,UAGpCsB,gBAHoC,GAGf,KAAA,CAHe,KAGf,CAHe,gBAAA;AAAA,UAKtChD,KALsC,GAK5B0B,KAL4B,CAAA,KAAA;;AAM5C,UAAIL,OAAO,CAAX,wBAAA,EAAsC;AACpCrB,QAAAA,KAAK,GAAG,CAAA,KAAA,EAAQqB,OAAO,CAAvBrB,wBAAQ,CAARA;AAKF;;AAAA,UACEgD,gBAAgB,KAAhBA,OAAAA,IACA3B,OAAO,CADP2B,eAAAA,IAEA3B,OAAO,CAFP2B,UAAAA,IAGA3B,OAAO,CAAPA,UAAAA,KAJF,IAAA,EAKE;AACA,eAAO,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACOrB,UAAAA,KAAK,EADZ;AAAA,SAAA,CAAA,EAAA,MAAA,EAGL,KAAA,CAHK,mBAAA,EAIL,KAAA,CAAA,KAAA,CAJF,gBAAO,CAAP;AANF,OAAA,MAYO;AACL,eAAO,KAAA,CAAA,oBAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACOA,UAAAA,KAAK,EADZ;AAAA,SAAA,CAAA,EAAA,MAAA,EAGL,KAAA,CAHK,0BAAA,EAIL,KAAA,CAAA,KAAA,CAJK,qBAAA,EAKL,KAAA,CAAA,KAAA,CALF,sBAAO,CAAP;AAQH;;;UAEOiD,W,GAAc,UAAA,KAAA,EAAA,OAAA,EAOjB;AAAA,UAAA,WAAA,GACwC,KAAA,CADxC,KAAA;AAAA,UACKlD,YADL,GAAA,WAAA,CAAA,YAAA;AAAA,UACmBiD,gBADnB,GAAA,WAAA,CAAA,gBAAA;AAEH,UAAIhD,KAA2B,GAAG,CAChC;AAAEkD,QAAAA,cAAc,EAAEnD,YAAY,KAAZA,QAAAA,GAAAA,QAAAA,GADc;AAChC,OADgC,EAEhCD,eAAe,CAAA,YAAA,EAEbuB,OAAO,CAFM,gBAAA,EAGbA,OAAO,CALuB,iBAEjB,CAFiB,EAOhCA,OAAO,CAPT,yBAAkC,CAAlC;AAUA,aAAO,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACOrB,QAAAA,KAAK,EADZ;AAAA,OAAA,CAAA,EAAA,OAAA,EAGL,KAAA,CAHK,oBAAA,EAILgD,gBAAgB,KAAhBA,OAAAA,GACI,KAAA,CAAA,KAAA,CADJA,yBAAAA,GAEI,KAAA,CAAA,KAAA,CANN,iBAAO,CAAP;;;UAUMG,W,GAAc,UAAA,KAAA,EAAyB;AAAA,UACrC9B,OADqC,GACzBK,KAAK,CAALA,KAAAA,CADyB,UACzBA,CADyB,OAAA;AAAA,UAGvC1B,KAHuC,GAG7B0B,KAH6B,CAAA,KAAA;;AAI7C,UAAIL,OAAO,CAAX,yBAAA,EAAuC;AACrCrB,QAAAA,KAAK,GAAG,CAAA,KAAA,EAAQqB,OAAO,CAAvBrB,yBAAQ,CAARA;AAGF;;AAAA,aAAO,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACOA,QAAAA,KAAK,EADZ;AAAA,OAAA,CAAA,EAAA,OAAA,EAGL,KAAA,CAHK,oBAAA,EAIL,KAAA,CAAA,KAAA,CAJF,iBAAO,CAAP;;;UAQMoD,gB,GAAmB,UAAA,KAAA,EAAyB;AAAA,UAAA,YAAA,GAI9C1B,KAAK,CAJyC,KAAA;AAAA,UAEhD2B,KAFgD,GAAA,YAAA,CAAA,KAAA;AAAA,UAGlChC,OAHkC,GAAA,YAAA,CAAA,UAAA,CAAA,OAAA;AAMlD,UAAMiC,MAAM,GAAG,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAf,KAAA;;AAEA,UAAIC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,IAAJ,CAAA,EAA0B;AAGxB,eAAA,IAAA;AAGF;;AAAA,aAAO,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACOvD,QAAAA,KAAK,EAAEwD,UAAU,CADxB;AAAA,OAAA,CAAA,EAAA,YAAA,EAGL,YAAA;AAAA,eAAMnC,OAAO,CAAb,gBAAA;AAHK,OAAA,EAIL,KAAA,CAAA,KAAA,CAJF,sBAAO,CAAP;;;UAQMoC,oB,GAAuB,UAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,uBAAA,EAc1B;AAAA,UACKrC,KADL,GACeM,KADf,CAAA,KAAA;AAAA,UAEK2B,KAFL,GAE6BjC,KAF7B,CAAA,KAAA;AAAA,UAEYsC,OAFZ,GAE6BtC,KAF7B,CAAA,OAAA;AAAA,UAEqBuC,GAFrB,GAE6BvC,KAF7B,CAAA,GAAA;;AAKH,UAAIiC,KAAK,KAAT,CAAA,EAAiB;AACf;AAGF;;AAAA,UAAMC,MAAM,GAAG,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAf,KAAA;;AAEA,UAAIC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,IAAJ,CAAA,EAA0B;AAGxB,eAAA,IAAA;AAGF;;AAAA,UAAMK,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,IAAlBA,EAAkB;AAAA,YAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,eACtB,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AACE,UAAA,KAAK,EAAE,CAACC,uBAAuB,CAAA,aAAA,CAAA,EAAA,EAAM,KAAA,CAAN,KAAA,EADjC,KACiC,CAAA,CAAxB,CADT;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA;AAAA;AAAA,SAAA,EADsB,QACtB,CADsB;AAAxB,OAAA;;AAQA,UAAMC,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,KAAjBA,EAAiB;AAAA,YAAGF,QAAH,GAAA,KAAA,CAAA,QAAA;AAAA,eACrB,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AACE,UAAA,KAAK,EAAE,CAACG,sBAAsB,CAAA,aAAA,CAAA,EAAA,EAAM,KAAA,CAAN,KAAA,EADhC,KACgC,CAAA,CAAvB,CADT;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA;AAAA;AAAA,SAAA,EADqB,QACrB,CADqB;AAAvB,OAAA;;AAQA,UAAMC,OAAO,GAAGC,QAAQ,CAAA,KAAA,EAAA,eAAA,EAAxB,cAAwB,CAAxB;;AAMA,UAAID,OAAO,KAAX,IAAA,EAAsB;AACpB,eAAA,OAAA;AAGF;;AAAA,UAAME,aAAa,GAAGb,MAAM,KAANA,CAAAA,IAAAA,OAAAA,GAAAA,MAAAA,GAAtB,UAAA;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,GAAG,EAAKc,IAAL,GAAA,GAAKA,GADV,GAAA;AAEE,QAAA,aAAa,EAFf,aAAA;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAcA,MAAM,CAApB,IAAoB,CAApB,EAA4B3C,KAAK,CAH1C,KAGS,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,OACE,CADF;;;UAWM4C,a,GAAgB,UAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,iBAAA,EAKnB;AAAA,UACKlD,KADL,GACeM,KADf,CAAA,KAAA;AAAA,UAEK2B,KAFL,GAE6BjC,KAF7B,CAAA,KAAA;AAAA,UAEYsC,OAFZ,GAE6BtC,KAF7B,CAAA,OAAA;AAAA,UAEqBuC,GAFrB,GAE6BvC,KAF7B,CAAA,GAAA;AAIH,UAAMkC,MAAM,GAAG,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAf,KAAA;;AAEA,UAAIC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,IAAJ,CAAA,EAA0B;AAGxB,eAAA,IAAA;AAGF;;AAAA,UAAMU,OAAO,GAAGC,QAAQ,CAAxB,KAAwB,CAAxB;;AAEA,UAAID,OAAO,IAAX,IAAA,EAAqB;AACnB,eAAA,IAAA;AAGF;;AAAA,UAAME,aAAa,GAAGb,MAAM,KAANA,CAAAA,IAAAA,OAAAA,GAAAA,MAAAA,GAAtB,UAAA;AAEA,aACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AACE,QAAA,aAAa,EADf,aAAA;AAEE,QAAA,GAAG,EAAKc,IAAL,GAAA,GAAKA,GAFV,GAAA;AAGE,QAAA,KAAK,EAAE,CACLC,MAAM,CADD,IAAA,EAELA,MAAM,CAFD,IAEC,CAFD,EAGL3C,KAAK,CAHA,KAAA,EAIL6C,iBAAiB,CAAA,aAAA,CAAA,EAAA,EACZ,KAAA,CADY,KAAA,EAPrB,KAOqB,CAAA,CAJZ,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,OACE,CADF;;;UAmBMC,Y,GAAe,UAAA,KAAA,EAAyB;AAAA,UACtCnD,OADsC,GAC1BK,KAAK,CAALA,KAAAA,CAD0B,UAC1BA,CAD0B,OAAA;;AAE9C,UAAIL,OAAO,CAAPA,MAAAA,KAAJ,IAAA,EAA6B;AAC3B,eAAA,IAAA;AAEF;;AAAA,UAAMpB,IAAI,GAAG,KAAA,CAAA,UAAA,CAAb,KAAa,CAAb;;AACA,UAAMC,KAAK,GAAG,KAAA,CAAA,WAAA,CAAd,KAAc,CAAd;;AACA,UAAMuE,KAAK,GAAG,KAAA,CAAA,WAAA,CAAA,KAAA,EAAwB;AACpCC,QAAAA,gBAAgB,EAAE,CAAC,CADiB,IAAA;AAEpCC,QAAAA,iBAAiB,EAAE,CAAC,CAFgB,KAAA;AAGpCC,QAAAA,yBAAyB,EAAEvD,OAAO,CAHpC;AAAsC,OAAxB,CAAd;;AAP8C,UAatC2B,gBAbsC,GAajB,KAAA,CAbiB,KAajB,CAbiB,gBAAA;AAe9C,UAAM6B,YAAY,GAAG;AACnB7E,QAAAA,KAAK,EAAEqE,MAAM,CADM,MAAA;AAEnBV,QAAAA,GAAG,EAAA,WAAWjC,KAAK,CAALA,KAAAA,CAFhB;AAAqB,OAArB;;AAKA,UACEL,OAAO,CAAPA,UAAAA,IACAA,OAAO,CADPA,eAAAA,IAEA9B,QAAQ,CAARA,EAAAA,KAFA8B,KAAAA,IAGA2B,gBAAgB,KAJlB,OAAA,EAKE;AACA,eACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,YAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA;AAAA;AAAA,SAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EADF,KACE,CADF;AANF,OAAA,MAaO;AACL,eACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,EAAA,YAAA,EAAA;AAEE,UAAA,WAAW,EACT,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,YAAA,KAAK,EAAEqB,MAAM,CAAnB,iBAAA;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EAAA;AAAA;AAAA,WAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,YAAA,MAAM,EAAES,OADV,gCAAA;AAEE,YAAA,KAAK,EAAET,MAAM,CAFf,QAAA;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EADF;AACE;AAAA,WAAA,CADF,EAKE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,YAAA,KAAK,EAAEA,MAAM,CAAnB,kBAAA;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EARN;AAQM;AAAA,WAAA,CALF,CAHJ;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA;AAAA;AAAA,SAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EADF,KACE,CADF;AAmBH;;;;;;;;yCAxc4BjD,K,EAAc;AACzC,UAAMC,OAAO,GAAGD,KAAK,CAALA,UAAAA,CAAhB,OAAA;;AACA,UAAI,OAAOC,OAAO,CAAd,WAAA,KAAJ,QAAA,EAA6C;AAC3C,eAAOA,OAAO,CAAd,WAAA;AAGF;;AAAA,UAAIA,OAAO,CAAPA,KAAAA,IAAiB,OAAOA,OAAO,CAAd,KAAA,KAAjBA,QAAAA,IAAJ,OAAA,EAAmE;AACjE,cAAM,IAAA,KAAA,CAAA,+BAEFD,KAAK,CAALA,KAAAA,CAFE,SAAA,GAAA,4DAAA,GAGwD,OAAOC,OAAO,CAH5E,KAAM,CAAN;AAOF;;AAAA,aAAOA,OAAO,CAAd,KAAA;;;;iCAGmBD,K,EAAc;AACjC,aAAO,KAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAuB,UAAA,CAAA,EAAC;AAAA,eAAIE,CAAC,CAADA,KAAAA,KAAYF,KAAK,CAALA,KAAAA,GAAhB,CAAA;AAA/B,OAAO,CAAP;;;;6CAG+BA,K,EAAc;AAC7C,UAAMG,SAAS,GAAG,KAAA,YAAA,CAAlB,KAAkB,CAAlB;;AACA,UAAI,CAAJ,SAAA,EAAgB;AACd,eAAA,IAAA;AAH2C;;AAAA,UAKrCC,eALqC,GAKjBD,SAAS,CAATA,UAAAA,CALiB,OAKjBA,CALiB,eAAA;;AAM7C,UAAIC,eAAe,IAAIA,eAAe,KAAtC,IAAA,EAAiD;AAC/C,eAAA,eAAA;AAEF;;AAAA,aAAO,KAAA,oBAAA,CAAP,SAAO,CAAP;;;;gDAGkCJ,K,EAAc;AAChD,UAAMG,SAAS,GAAG,KAAA,YAAA,CAAlB,KAAkB,CAAlB;;AACA,UAAI,CAAJ,SAAA,EAAgB;AACd,eAAA,IAAA;AAEF;;AAAA,aAAOA,SAAS,CAATA,UAAAA,CAAAA,OAAAA,CAAP,wBAAA;;;;6BAoaO;AAAA,UAAA,MAAA,GAAA,IAAA;;AACP,UAAA,MAAA;AACA,UAAA,UAAA;AAFO,UAAA,YAAA,GAG8B,KAH9B,KAAA;AAAA,UAGCwD,IAHD,GAAA,YAAA,CAAA,IAAA;AAAA,UAGO3D,KAHP,GAAA,YAAA,CAAA,KAAA;AAAA,UAGchB,WAHd,GAAA,YAAA,CAAA,WAAA;;AAKP,UAAI2E,IAAI,KAAR,OAAA,EAAsB;AACpB,YAAMC,aAAuC,GAA7C,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAA0B,UAAA,KAAA,EAAS;AACjCA,UAAAA,aAAa,CAAC5D,KAAK,CAAnB4D,KAAa,CAAbA,GAAAA,KAAAA;AADF,SAAA;AAGA,YAAMC,WAAW,GAAGC,MAAM,CAANA,MAAAA,CAAAA,aAAAA,EAAAA,GAAAA,CAAiC,UAAA,KAAA,EAAK;AAAA,iBAAK;AAC7DC,YAAAA,QAAQ,EAAE,MAAI,CAAJ,KAAA,CADmD,QAAA;AAE7D/D,YAAAA,KAAK,EAFmD;AAAK,WAAL;AAA1D,SAAoB8D,CAApB;AAIAE,QAAAA,MAAM,GAAGH,WAAW,CAAXA,GAAAA,CAAgB,UAAA,KAAA,EAAK;AAAA,iBAAI,MAAI,CAAJ,YAAA,CAAJ,KAAI,CAAJ;AAA9BG,SAASH,CAATG;AACAC,QAAAA,UAAU,GAAGJ,WAAW,CAAXA,GAAAA,CAAgB,UAAA,KAAA,EAAK;AAAA,iBAAI,MAAI,CAAJ,gBAAA,CAAJ,KAAI,CAAJ;AAAlCI,SAAaJ,CAAbI;AAVF,OAAA,MAWO;AACL,YAAMC,WAAW,GAAG;AAClBH,UAAAA,QAAQ,EAAE,IAAII,QAAQ,CAAZ,KAAA,CAAmB,KAAA,KAAA,CAAA,KAAA,CADX,KACR,CADQ;AAElBnE,UAAAA,KAAK,EAAE,KAAA,KAAA,CAFT;AAAoB,SAApB;AAKAgE,QAAAA,MAAM,GAAG,KAAA,YAAA,CAATA,WAAS,CAATA;AACAC,QAAAA,UAAU,GAAG,KAAA,gBAAA,CAAbA,WAAa,CAAbA;AAvBK;;AAAA,UA0BChE,OA1BD,GA0BaD,KAAK,CA1BlB,UA0BaA,CA1Bb,OAAA;AAAA,UAAA,oBAAA,GA2BsBC,OA3BtB,CAAA,WAAA;AAAA,UA2BCmE,WA3BD,GAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,oBAAA;AA4BP,UAAMC,cAAc,GAAGjC,UAAU,CAAVA,OAAAA,CAAvB,WAAuBA,CAAvB;AACA,UAAMkC,YAAY,GAAGvF,eAAe,CAApC,WAAoC,CAApC;;AA7BO,UAgCLwF,UAhCK,GAqDHF,cArDG,CAAA,UAAA;AAAA,UAiCLvC,cAjCK,GAqDHuC,cArDG,CAAA,cAAA;AAAA,UAkCLG,IAlCK,GAqDHH,cArDG,CAAA,IAAA;AAAA,UAmCLI,aAnCK,GAqDHJ,cArDG,CAAA,aAAA;AAAA,UAoCLK,QApCK,GAqDHL,cArDG,CAAA,QAAA;AAAA,UAqCLM,UArCK,GAqDHN,cArDG,CAAA,UAAA;AAAA,UAsCLO,SAtCK,GAqDHP,cArDG,CAAA,SAAA;AAAA,UAuCLQ,QAvCK,GAqDHR,cArDG,CAAA,QAAA;AAAA,UAwCLN,QAxCK,GAqDHM,cArDG,CAAA,QAAA;AAAA,UAyCLS,OAzCK,GAqDHT,cArDG,CAAA,OAAA;AAAA,UA0CLU,iBA1CK,GAqDHV,cArDG,CAAA,iBAAA;AAAA,UA2CLW,YA3CK,GAqDHX,cArDG,CAAA,YAAA;AAAA,UA4CLY,WA5CK,GAqDHZ,cArDG,CAAA,WAAA;AAAA,UAgDLa,GAhDK,GAqDHb,cArDG,CAAA,GAAA;AAAA,UAiDLvF,KAjDK,GAqDHuF,cArDG,CAAA,KAAA;AAAA,UAkDLc,MAlDK,GAqDHd,cArDG,CAAA,MAAA;AAAA,UAmDLxF,IAnDK,GAqDHwF,cArDG,CAAA,IAAA;AAAA,UAoDFe,eApDE,GAAA,wBAAA,CAAA,cAAA,EAAA,CAAA,YAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,eAAA,EAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,aAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,CAAA,CAAA;;AAuDP,UAAA,OAAA,EAAa;AACXC,QAAAA,wBAAwB,CAAA,UAAA,EAAxBA,YAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,cAAA,EAAxBA,gBAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,IAAA,EAAxBA,MAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,aAAA,EAAxBA,eAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,QAAA,EAAxBA,UAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,UAAA,EAAxBA,YAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,SAAA,EAAxBA,WAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,QAAA,EAAxBA,UAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,OAAA,EAAxBA,SAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,QAAA,EAAxBA,UAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,iBAAA,EAAxBA,mBAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,YAAA,EAAxBA,cAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,WAAA,EAAxBA,aAAwB,CAAxBA;AAIAA,QAAAA,wBAAwB,CAAA,GAAA,EAAxBA,KAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,KAAA,EAAxBA,OAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,MAAA,EAAxBA,QAAwB,CAAxBA;AACAA,QAAAA,wBAAwB,CAAA,IAAA,EAAxBA,MAAwB,CAAxBA;AAIF;;AAAA,UAAMC,eAAe,GAAG,CACtBrF,OAAO,CAAPA,iBAAAA,GACIgD,MAAM,CADVhD,oBAAAA,GAEIgD,MAAM,CAHY,SAAA,EAItB;AAAEsC,QAAAA,MAAM,EAJc;AAItB,OAJsB,EAAxB,eAAwB,CAAxB;AA/EO,UAuFCC,gBAvFD,GAuFsBvF,OAvFtB,CAAA,gBAAA;AAwFP,UAAMwF,UAAU,GAAGD,gBAAgB,IAAI;AACrCN,QAAAA,GAAG,EADkC,QAAA;AAErCC,QAAAA,MAAM,EAF+B,OAAA;AAGrCO,QAAAA,UAAU,EAHZ;AAAuC,OAAvC;AAMA,aACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AACE,QAAA,KAAK,EAAE,CACL,KAAA,KAAA,CAAA,kBAAA,CAA8B,KADzB,KACL,CADK,EAELvH,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,IAAyB,CAAC8B,OAAO,CAAjC9B,iBAAAA,GACI;AACEwH,UAAAA,eAAe,EACbP,eAAe,CAAfA,eAAAA,IAHRjH;AACI,SADJA,GAHJ,IACS,CADT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAWE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AAAc,QAAA,UAAU,EAAxB,UAAA;AAAsC,QAAA,KAAK,EAA3C,eAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAAA,UAAA,EAEE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,QAAA,KAAK,EAAE8E,MAAM,CAAnB,OAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAdN,MAcM,CAFF,CAXF,CADF;;;;wBA3jBkB;AAClB,aAAO/E,aAAa,GAApB,gBAAA;;;;;EAFiBgB,KAAK,CAACC,a,CAArBF;;AAAAA,M,CAKGG,YALHH,GAKkB;AACpBI,EAAAA,kBAAkB,EAAEC,uBAAuB,CADvB,SAAA;AAEpBC,EAAAA,gBAAgB,EAAED,uBAAuB,CAFrB,OAAA;AAGpBE,EAAAA,sBAAsB,EAAEF,uBAAuB,CAH3B,aAAA;AAIpBG,EAAAA,qBAAqB,EAAEH,uBAAuB,CAJ1B,YAAA;AAKpBI,EAAAA,yBAAyB,EAAEJ,uBAAuB,CAL9B,iBAAA;AAMpBK,EAAAA,iBAAiB,EAAEL,uBAAuB,CANtB,SAAA;AAOpBM,EAAAA,iBAAiB,EAAEN,uBAAuB,CAPtB,QAAA;AAQpBO,EAAAA,sBAAsB,EAAEP,uBAAuB,CAR3B;AAAA,CALlBL;;AAilBN,SAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,EAAiE;AAC/D,MAAI2G,SAAS,KAATA,UAAAA,IAA4BC,KAAK,KAArC,UAAA,EAAsD;AACpDC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,yJAAAA;AADF,GAAA,MAIO,IAAID,KAAK,KAAT,SAAA,EAAyB;AAC9BC,IAAAA,OAAO,CAAPA,IAAAA,CACKF,SADLE,GAAAA,wBACKF,GADLE,KACKF,GADLE,sCAAAA;AAIH;AAED;;AAAA,IAAMC,uBAAuB,GAAG5H,QAAQ,CAARA,MAAAA,CAAgB;AAC9CE,EAAAA,OAAO,EAAE;AACP2H,IAAAA,SAAS,EAFmC;AACrC,GADqC;AAI9C5H,EAAAA,GAAG,EAAE;AACH6H,IAAAA,iBAAiB,EAAE7D,UAAU,CAD1B,aAAA;AAEH8D,IAAAA,iBAAiB,EAN2B;AAIzC,GAJyC;AAQ9C5H,EAAAA,OAAO,EAAE;AAGP6H,IAAAA,SAAS,EAXb;AAQW;AARqC,CAAhBhI,CAAhC;AAeA,IAAMiI,wBAAwB,GAA9B,MAAA;AAEA,IAAMnD,MAAM,GAAGb,UAAU,CAAVA,MAAAA,CAAkB;AAC/BiE,EAAAA,SAAS,EAAA,aAAA,CAAA;AACPV,IAAAA,eAAe,EADR;AAAA,GAAA,EADsB,uBACtB,CADsB;AAK/BW,EAAAA,oBAAoB,EAAA,aAAA,CAAA;AAClBvC,IAAAA,QAAQ,EADU,UAAA;AAElBmB,IAAAA,GAAG,EAFe,CAAA;AAGlBrG,IAAAA,IAAI,EAHc,CAAA;AAIlBC,IAAAA,KAAK,EAJa;AAAA,GAAA,EAAA,uBAAA,EAAA;AAMlBmH,IAAAA,iBAAiB,EANC,CAAA;AAOlBC,IAAAA,iBAAiB,EAPC,aAAA;AAQlBF,IAAAA,SAAS,EAboB;AAKX,GAAA,CALW;AAe/BO,EAAAA,MAAM,EAAA,aAAA,CAAA,EAAA,EACDnE,UAAU,CADT,kBAAA,EAAA;AAEJqC,IAAAA,aAAa,EAjBgB;AAezB,GAAA,CAfyB;AAmB/B+B,EAAAA,IAAI,EAAE;AACJb,IAAAA,eAAe,EApBc;AAmBzB,GAnByB;AAsB/Bc,EAAAA,iBAAiB,EAAE;AACjBjC,IAAAA,IAAI,EADa,CAAA;AAEjBC,IAAAA,aAAa,EAFI,KAAA;AAGjB3C,IAAAA,cAAc,EAzBe;AAsBZ,GAtBY;AA2B/B4E,EAAAA,kBAAkB,EAAE;AAClBlC,IAAAA,IAAI,EADc,CAAA;AAElBmB,IAAAA,eAAe,EAFG,SAAA;AAGlBgB,IAAAA,UAAU,EAAE,CA9BiB;AA2BX,GA3BW;AAgC/BC,EAAAA,QAAQ,EAAE;AAERrB,IAAAA,MAAM,EAFE,EAAA;AAGR1E,IAAAA,KAAK,EAHG,IAAA;AAIR8F,IAAAA,UAAU,EAJF,GAAA;AAKRE,IAAAA,SAAS,EAAE,CALH,GAAA;AAMRC,IAAAA,SAAS,EAND,QAAA;AAORC,IAAAA,UAAU,EAPF,SAAA;AAQRC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAEC,WAAW,CAAXA,KAAAA,GAAoB,CAApBA,CAAAA,GAxCO;AAwCjB,KAAD;AARH,GAhCqB;AA2C/BjD,EAAAA,UAAU,EA3CqB,EAAA;AA6C/BZ,EAAAA,KAAK,EAAE;AACL8B,IAAAA,MAAM,EADD,CAAA;AAELD,IAAAA,GAAG,EAFE,CAAA;AAGLnB,IAAAA,QAAQ,EAHH,UAAA;AAILQ,IAAAA,UAAU,EAJL,QAAA;AAKLE,IAAAA,aAAa,EAlDgB;AA6CxB,GA7CwB;AAqD/B5F,EAAAA,IAAI,EAAE;AACJA,IAAAA,IAAI,EADA,CAAA;AAEJsG,IAAAA,MAAM,EAFF,CAAA;AAGJD,IAAAA,GAAG,EAHC,CAAA;AAIJnB,IAAAA,QAAQ,EAJJ,UAAA;AAKJQ,IAAAA,UAAU,EALN,QAAA;AAMJE,IAAAA,aAAa,EA3DgB;AAqDzB,GArDyB;AA8D/B3F,EAAAA,KAAK,EAAE;AACLA,IAAAA,KAAK,EADA,CAAA;AAELqG,IAAAA,MAAM,EAFD,CAAA;AAGLD,IAAAA,GAAG,EAHE,CAAA;AAILnB,IAAAA,QAAQ,EAJH,UAAA;AAKLU,IAAAA,aAAa,EALR,KAAA;AAMLF,IAAAA,UAAU,EApEmB;AA8DxB,GA9DwB;AAsE/B4C,EAAAA,OAAO,EAAE;AACP3C,IAAAA,IAAI,EAvER;AAsEW;AAtEsB,CAAlBpC,CAAf;AA2EA,eAAegF,eAAe,CAA9B,MAA8B,CAA9B","sourcesContent":["import * as React from 'react';\n\nimport {\n  Animated,\n  Image,\n  Platform,\n  StyleSheet,\n  View,\n  I18nManager,\n  MaskedViewIOS,\n  ViewStyle,\n  LayoutChangeEvent,\n  StyleProp,\n} from 'react-native';\n\nimport { withOrientation, SafeAreaView } from '@react-navigation/native';\n\nimport HeaderTitle from './HeaderTitle';\nimport HeaderBackButton from './HeaderBackButton';\nimport ModularHeaderBackButton from './ModularHeaderBackButton';\nimport HeaderStyleInterpolator from './HeaderStyleInterpolator';\nimport {\n  Scene,\n  HeaderLayoutPreset,\n  SceneInterpolatorProps,\n  HeaderProps,\n} from '../../types';\n\ntype Props = HeaderProps & {\n  leftLabelInterpolator: (props: SceneInterpolatorProps) => any;\n  leftButtonInterpolator: (props: SceneInterpolatorProps) => any;\n  titleFromLeftInterpolator: (props: SceneInterpolatorProps) => any;\n  layoutInterpolator: (props: SceneInterpolatorProps) => any;\n};\n\ntype SubviewProps = {\n  position: Animated.AnimatedInterpolation;\n  scene: Scene;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype SubviewName = 'left' | 'right' | 'title' | 'background';\n\ntype State = {\n  widths: { [key: string]: number };\n};\n\nconst APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64,\n});\nconst STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0,\n});\n\n// These can be adjusted by using headerTitleContainerStyle on navigationOptions\nconst TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56,\n});\n\nconst TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64,\n});\n\nconst getTitleOffsets = (\n  layoutPreset: HeaderLayoutPreset,\n  hasLeftComponent: boolean,\n  hasRightComponent: boolean\n): ViewStyle | undefined => {\n  if (layoutPreset === 'left') {\n    // Maybe at some point we should do something different if the back title is\n    // explicitly enabled, for now people can control it manually\n\n    let style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN,\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    let style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN,\n    };\n    if (!hasLeftComponent && !hasRightComponent) {\n      style.left = 0;\n      style.right = 0;\n    }\n\n    return style;\n  }\n\n  return undefined;\n};\n\nconst getAppBarHeight = (isLandscape: boolean) => {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nclass Header extends React.PureComponent<Props, State> {\n  static get HEIGHT() {\n    return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n  }\n\n  static defaultProps = {\n    layoutInterpolator: HeaderStyleInterpolator.forLayout,\n    leftInterpolator: HeaderStyleInterpolator.forLeft,\n    leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n    leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n    titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n    titleInterpolator: HeaderStyleInterpolator.forCenter,\n    rightInterpolator: HeaderStyleInterpolator.forRight,\n    backgroundInterpolator: HeaderStyleInterpolator.forBackground,\n  };\n\n  state: State = {\n    widths: {},\n  };\n\n  private getHeaderTitleString(scene: Scene) {\n    const options = scene.descriptor.options;\n    if (typeof options.headerTitle === 'string') {\n      return options.headerTitle;\n    }\n\n    if (options.title && typeof options.title !== 'string' && __DEV__) {\n      throw new Error(\n        `Invalid title for route \"${\n          scene.route.routeName\n        }\" - title must be string or null, instead it was of type ${typeof options.title}`\n      );\n    }\n\n    return options.title;\n  }\n\n  private getLastScene(scene: Scene) {\n    return this.props.scenes.find(s => s.index === scene.index - 1);\n  }\n\n  private getBackButtonTitleString(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    const { headerBackTitle } = lastScene.descriptor.options;\n    if (headerBackTitle || headerBackTitle === null) {\n      return headerBackTitle;\n    }\n    return this.getHeaderTitleString(lastScene);\n  }\n\n  private getTruncatedBackButtonTitle(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    return lastScene.descriptor.options.headerTruncatedBackTitle;\n  }\n\n  private renderTitleComponent = (props: SubviewProps) => {\n    const { layoutPreset } = this.props;\n    const { options } = props.scene.descriptor;\n    const headerTitle = options.headerTitle;\n    if (React.isValidElement(headerTitle)) {\n      return headerTitle;\n    }\n    const titleString = this.getHeaderTitleString(props.scene);\n\n    const titleStyle = options.headerTitleStyle;\n    const color = options.headerTintColor;\n    const allowFontScaling = options.headerTitleAllowFontScaling;\n\n    // When title is centered, the width of left/right components depends on the\n    // calculated size of the title.\n    const onLayout =\n      layoutPreset === 'center'\n        ? (e: LayoutChangeEvent) => {\n            const { width } = e.nativeEvent.layout;\n\n            this.setState(state => ({\n              widths: {\n                ...state.widths,\n                [props.scene.key]: width,\n              },\n            }));\n          }\n        : undefined;\n\n    const HeaderTitleComponent =\n      headerTitle && typeof headerTitle !== 'string'\n        ? headerTitle\n        : HeaderTitle;\n    return (\n      <HeaderTitleComponent\n        onLayout={onLayout}\n        allowFontScaling={!!allowFontScaling}\n        style={[\n          color ? { color } : null,\n          layoutPreset === 'center'\n            ? // eslint-disable-next-line react-native/no-inline-styles\n              { textAlign: 'center' }\n            : // eslint-disable-next-line react-native/no-inline-styles\n              { textAlign: 'left' },\n          titleStyle,\n        ]}\n      >\n        {titleString}\n      </HeaderTitleComponent>\n    );\n  };\n\n  private renderLeftComponent = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (\n      React.isValidElement(options.headerLeft) ||\n      options.headerLeft === null\n    ) {\n      return options.headerLeft;\n    }\n\n    if (!options.headerLeft && props.scene.index === 0) {\n      return;\n    }\n\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n    const RenderedLeftComponent = options.headerLeft || HeaderBackButton;\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n    return (\n      <RenderedLeftComponent\n        onPress={goBack}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        backTitleVisible={this.props.backTitleVisible}\n        allowFontScaling={options.headerBackAllowFontScaling}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderModularLeftComponent = (\n    props: SubviewProps,\n    ButtonContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['ButtonContainerComponent'],\n    LabelContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['LabelContainerComponent']\n  ) => {\n    const { options, navigation } = props.scene.descriptor;\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n\n    return (\n      <ModularHeaderBackButton\n        onPress={goBack}\n        ButtonContainerComponent={ButtonContainerComponent}\n        LabelContainerComponent={LabelContainerComponent}\n        backTitleVisible={this.props.backTitleVisible}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderRightComponent = (props: SubviewProps) => {\n    const { headerRight } = props.scene.descriptor.options;\n    return headerRight || null;\n  };\n\n  private renderLeft = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    const { transitionPreset } = this.props;\n\n    let { style } = props;\n    if (options.headerLeftContainerStyle) {\n      style = [style, options.headerLeftContainerStyle];\n    }\n\n    // On Android, or if we have a custom header left, or if we have a custom back image, we\n    // do not use the modular header (which is the one that imitates UINavigationController)\n    if (\n      transitionPreset !== 'uikit' ||\n      options.headerBackImage ||\n      options.headerLeft ||\n      options.headerLeft === null\n    ) {\n      return this.renderSubView(\n        { ...props, style },\n        'left',\n        this.renderLeftComponent,\n        this.props.leftInterpolator\n      );\n    } else {\n      return this.renderModularSubView(\n        { ...props, style },\n        'left',\n        this.renderModularLeftComponent,\n        this.props.leftLabelInterpolator,\n        this.props.leftButtonInterpolator\n      );\n    }\n  };\n\n  private renderTitle = (\n    props: SubviewProps,\n    options: {\n      hasLeftComponent: boolean;\n      hasRightComponent: boolean;\n      headerTitleContainerStyle: StyleProp<ViewStyle>;\n    }\n  ) => {\n    const { layoutPreset, transitionPreset } = this.props;\n    let style: StyleProp<ViewStyle> = [\n      { justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start' },\n      getTitleOffsets(\n        layoutPreset,\n        options.hasLeftComponent,\n        options.hasRightComponent\n      ),\n      options.headerTitleContainerStyle,\n    ];\n\n    return this.renderSubView(\n      { ...props, style },\n      'title',\n      this.renderTitleComponent,\n      transitionPreset === 'uikit'\n        ? this.props.titleFromLeftInterpolator\n        : this.props.titleInterpolator\n    );\n  };\n\n  private renderRight = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    let { style } = props;\n    if (options.headerRightContainerStyle) {\n      style = [style, options.headerRightContainerStyle];\n    }\n\n    return this.renderSubView(\n      { ...props, style },\n      'right',\n      this.renderRightComponent,\n      this.props.rightInterpolator\n    );\n  };\n\n  private renderBackground = (props: SubviewProps) => {\n    const {\n      index,\n      descriptor: { options },\n    } = props.scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    return this.renderSubView(\n      { ...props, style: StyleSheet.absoluteFill },\n      'background',\n      () => options.headerBackground,\n      this.props.backgroundInterpolator\n    );\n  };\n\n  private renderModularSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (\n      props: SubviewProps,\n      ButtonContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['ButtonContainerComponent'],\n      LabelContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['LabelContainerComponent']\n    ) => React.ReactNode,\n    labelStyleInterpolator: (props: SceneInterpolatorProps) => any,\n    buttonStyleInterpolator: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    // Never render a modular back button on the first screen in a stack.\n    if (index === 0) {\n      return;\n    }\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const ButtonContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[buttonStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const LabelContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[labelStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const subView = renderer(\n      props,\n      ButtonContainer as any,\n      LabelContainer as any\n    );\n\n    if (subView === null) {\n      return subView;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <View\n        key={`${name}_${key}`}\n        pointerEvents={pointerEvents}\n        style={[styles.item, styles[name], props.style]}\n      >\n        {subView}\n      </View>\n    );\n  };\n\n  private renderSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (props: SubviewProps) => React.ReactNode,\n    styleInterpolator: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const subView = renderer(props);\n\n    if (subView == null) {\n      return null;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <Animated.View\n        pointerEvents={pointerEvents}\n        key={`${name}_${key}`}\n        style={[\n          styles.item,\n          styles[name],\n          props.style,\n          styleInterpolator({\n            ...this.props,\n            ...props,\n          }),\n        ]}\n      >\n        {subView}\n      </Animated.View>\n    );\n  };\n\n  private renderHeader = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (options.header === null) {\n      return null;\n    }\n    const left = this.renderLeft(props);\n    const right = this.renderRight(props);\n    const title = this.renderTitle(props, {\n      hasLeftComponent: !!left,\n      hasRightComponent: !!right,\n      headerTitleContainerStyle: options.headerTitleContainerStyle,\n    });\n\n    const { transitionPreset } = this.props;\n\n    const wrapperProps = {\n      style: styles.header,\n      key: `scene_${props.scene.key}`,\n    };\n\n    if (\n      options.headerLeft ||\n      options.headerBackImage ||\n      Platform.OS !== 'ios' ||\n      transitionPreset !== 'uikit'\n    ) {\n      return (\n        <View {...wrapperProps}>\n          {title}\n          {left}\n          {right}\n        </View>\n      );\n    } else {\n      return (\n        <MaskedViewIOS\n          {...wrapperProps}\n          maskElement={\n            <View style={styles.iconMaskContainer}>\n              <Image\n                source={require('../assets/back-icon-mask.png')}\n                style={styles.iconMask}\n              />\n              <View style={styles.iconMaskFillerRect} />\n            </View>\n          }\n        >\n          {title}\n          {left}\n          {right}\n        </MaskedViewIOS>\n      );\n    }\n  };\n\n  render() {\n    let appBar;\n    let background;\n    const { mode, scene, isLandscape } = this.props;\n\n    if (mode === 'float') {\n      const scenesByIndex: { [key: string]: Scene } = {};\n      this.props.scenes.forEach(scene => {\n        scenesByIndex[scene.index] = scene;\n      });\n      const scenesProps = Object.values(scenesByIndex).map(scene => ({\n        position: this.props.position,\n        scene,\n      }));\n      appBar = scenesProps.map(props => this.renderHeader(props));\n      background = scenesProps.map(props => this.renderBackground(props));\n    } else {\n      const headerProps = {\n        position: new Animated.Value(this.props.scene.index),\n        scene: this.props.scene,\n      };\n\n      appBar = this.renderHeader(headerProps);\n      background = this.renderBackground(headerProps);\n    }\n\n    const { options } = scene.descriptor;\n    const { headerStyle = {} } = options;\n    const headerStyleObj = StyleSheet.flatten(headerStyle) as ViewStyle;\n    const appBarHeight = getAppBarHeight(isLandscape);\n\n    const {\n      alignItems,\n      justifyContent,\n      flex,\n      flexDirection,\n      flexGrow,\n      flexShrink,\n      flexBasis,\n      flexWrap,\n      position,\n      padding,\n      paddingHorizontal,\n      paddingRight,\n      paddingLeft,\n      // paddingVertical,\n      // paddingTop,\n      // paddingBottom,\n      top,\n      right,\n      bottom,\n      left,\n      ...safeHeaderStyle\n    } = headerStyleObj;\n\n    if (__DEV__) {\n      warnIfHeaderStyleDefined(alignItems, 'alignItems');\n      warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n      warnIfHeaderStyleDefined(flex, 'flex');\n      warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n      warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n      warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n      warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n      warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n      warnIfHeaderStyleDefined(padding, 'padding');\n      warnIfHeaderStyleDefined(position, 'position');\n      warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n      warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n      warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n      // warnIfHeaderStyleDefined(paddingVertical, 'paddingVertical');\n      // warnIfHeaderStyleDefined(paddingTop, 'paddingTop');\n      // warnIfHeaderStyleDefined(paddingBottom, 'paddingBottom');\n      warnIfHeaderStyleDefined(top, 'top');\n      warnIfHeaderStyleDefined(right, 'right');\n      warnIfHeaderStyleDefined(bottom, 'bottom');\n      warnIfHeaderStyleDefined(left, 'left');\n    }\n\n    // TODO: warn if any unsafe styles are provided\n    const containerStyles = [\n      options.headerTransparent\n        ? styles.transparentContainer\n        : styles.container,\n      { height: appBarHeight },\n      safeHeaderStyle,\n    ];\n\n    const { headerForceInset } = options;\n    const forceInset = headerForceInset || {\n      top: 'always',\n      bottom: 'never',\n      horizontal: 'always',\n    };\n\n    return (\n      <Animated.View\n        style={[\n          this.props.layoutInterpolator(this.props),\n          Platform.OS === 'ios' && !options.headerTransparent\n            ? {\n                backgroundColor:\n                  safeHeaderStyle.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n              }\n            : null,\n        ]}\n      >\n        <SafeAreaView forceInset={forceInset} style={containerStyles}>\n          {background}\n          <View style={styles.flexOne}>{appBar}</View>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nfunction warnIfHeaderStyleDefined(value: any, styleProp: string) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\n      \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\"\n    );\n  } else if (value !== undefined) {\n    console.warn(\n      `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n    );\n  }\n}\n\nconst platformContainerStyles = Platform.select({\n  android: {\n    elevation: 4,\n  },\n  ios: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#A7A7AA',\n  },\n  default: {\n    // https://github.com/necolas/react-native-web/issues/44\n    // Material Design\n    boxShadow: `0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)`,\n  },\n});\n\nconst DEFAULT_BACKGROUND_COLOR = '#FFF';\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: DEFAULT_BACKGROUND_COLOR,\n    ...platformContainerStyles,\n  },\n  transparentContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    ...platformContainerStyles,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0,\n  },\n  header: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row',\n  },\n  item: {\n    backgroundColor: 'transparent',\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5,\n  },\n  iconMask: {\n    // These are mostly the same as the icon in ModularHeaderBackButton\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  background: {},\n  // eslint-disable-next-line react-native/no-unused-styles\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  flexOne: {\n    flex: 1,\n  },\n});\n\nexport default withOrientation(Header);\n"]},"metadata":{},"sourceType":"module"}